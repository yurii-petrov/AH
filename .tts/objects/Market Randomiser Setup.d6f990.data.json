{
  "GUID": "d6f990",
  "Name": "Custom_Tile",
  "Transform": {
    "posX": 56.785408,
    "posY": 1.40550554,
    "posZ": 10.7350988,
    "rotX": 0.0169045758,
    "rotY": 179.976181,
    "rotZ": 0.07986982,
    "scaleX": 2.86062551,
    "scaleY": 1,
    "scaleZ": 2.86062551
  },
  "Nickname": "Market Randomiser Setup",
  "Description": "\"Top Market Card\" takes the top visible card of the Market Setup Deck and uses that. Otherwise a random market setup card is taken and used.",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "ColorDiffuse": {
    "r": 0.225874037,
    "g": 0.597561061,
    "b": 0.257651329
  },
  "Tags": [
    "setup"
  ],
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": true,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": true,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819373493/90CDF0A5BDAE7E349F78B16EA318B10A1DD0D837/",
    "ImageSecondaryURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819373493/90CDF0A5BDAE7E349F78B16EA318B10A1DD0D837/",
    "ImageScalar": 1,
    "WidthScale": 0,
    "CustomTile": {
      "Type": 3,
      "Thickness": 0.2,
      "Stackable": false,
      "Stretch": true
    }
  },
  "LuaScript": "-- randomizer decks\r\nmarket_random_deck_id = '866f82'\r\ngem_random_deck_id = 'd35e87'\r\nspell_random_deck_id = '8cc318'\r\nrelic_random_deck_id = 'bc68c5'\r\n\r\n\r\ngem_random_script = '61d17d'\r\nrelic_random_script = 'feac97'\r\nspell_random_script = 'c04785'\r\n\r\nbarracksPos = ''\r\n--gem bags\r\ng2 = 'c70854'\r\ng3 = 'a0ee7c'\r\ng4 = '326176'\r\ng5 = '76b9b1'\r\ng6 = 'ae4191'\r\n\r\n--spell bags\r\ns2 = 'aef55f'\r\ns3 = '269f19'\r\ns4 = '6b6868'\r\ns5 = '70a46c'\r\ns6 = 'c2eea0'\r\ns7 = '723b07'\r\ns8 = '6a9948'\r\n\r\n--relic bags\r\nr2 = '0bcafd'\r\nr3 = 'f696d8'\r\nr4 = '5dd56e'\r\nr5 = 'ca6d11'\r\nr6 = 'f037fc'\r\nr7 = 'ca0abc'\r\nr8 = 'd42b3a'\r\n\r\nbarracksVectorOffset = 1\r\n\r\ntagList = {\r\n  [1] = 'AeonsDeck',\r\n  [2] = 'WarDeck',\r\n  [3] = 'LegacyDeck',\r\n  [4] = 'NewADeck',\r\n  [5] = 'OutcastsDeck',\r\n  [6] = 'LoGDeck',\r\n  [7] = 'NamelessDeck',\r\n  [8] = 'OuterDDeck',\r\n  [9] = 'VoidDeck',\r\n  [10] = 'DepthsDeck',\r\n  [11] = 'BSDeck',\r\n  [12] = 'TADeck',\r\n  [13] = 'ITWDeck',\r\n  [14] = 'VillageDeck',\r\n  [15] = 'SDDeck',\r\n  [16] = 'RTGDeck',\r\n  [17] = 'RuinsDeck',\r\n  [18] = 'MiniDeck',\r\n  [19] = 'PromoDeck',\r\n}\r\n\r\nnvm = {\r\n  [1] = 'setup'\r\n}\r\n\r\n--market positions\r\nspot11 = Vector(28.928, 1.64, 23.46)\r\nspot12 = Vector(36.06, 1.64, 23.46)\r\nspot13 = Vector(43.27, 1.64, 23.46)\r\nspot21 = Vector(28.928, 1.64, 13.75)\r\nspot22 = Vector(36.06, 1.64, 13.75)\r\nspot23 = Vector(43.27, 1.64, 13.75)\r\nspot31 = Vector(28.928, 1.64, 4.06)\r\nspot32 = Vector(36.06, 1.64, 4.06)\r\nspot33 = Vector(43.27, 1.64, 4.06)\r\n\r\n--market function table\r\nmarket_setups = {}\r\nmarket_setups['8d517a'] = 'setupMarket1'\r\nmarket_setups['1d4e76'] = 'setupMarket2'\r\nmarket_setups['765ab6'] = 'setupMarket3'\r\nmarket_setups['b341a5'] = 'setupMarket4'\r\nmarket_setups['9a91a0'] = 'setupMarket5'\r\nmarket_setups['881ec2'] = 'setupMarket6'\r\nmarket_setups['20585a'] = 'setupMarket7'\r\nmarket_setups['7f44bf'] = 'setupMarket8'\r\n\r\nmarketScript = '2803db'\r\n\r\nmarket_funcs = {}\r\n\r\nrmarket_setup_button_params = {click_function = 'randomMarket',\r\n                              function_owner = self,\r\n                              label = 'Random Market Card',\r\n                              position = {0,0.2,-0.5},\r\n                              rotation = {0,0,0},\r\n                              width = 700,\r\n                              height = 300,\r\n                              font_size = 70,\r\n                              tooltip = \"Chooses a random market card in the Market Setup deck and constructs a random market from that.\"\r\n                          }\r\nmarket_setup_button_params = {click_function = 'setupMarket',\r\n                                                        function_owner = self,\r\n                                                        label = 'Selected Market Card',\r\n                                                        position = {0,0.2,0.5},\r\n                                                        rotation = {0,0,0},\r\n                                                        width = 700,\r\n                                                        height = 300,\r\n                                                        font_size = 70,\r\n                                                        tooltip = \"Selects the Market Setup Card that's on the green tile and constructs a random market from that.\"\r\n                                                    }\r\n\r\nfunction onLoad()\r\n    market_deck = getObjectFromGUID(market_random_deck_id)\r\n    self.createButton(market_setup_button_params)\r\n    self.createButton(rmarket_setup_button_params)\r\n    barracksPos =  getObjectFromGUID(\"d089df\").getPosition()\r\n    self.setTags(nvm)\r\nend\r\n\r\nfunction findDecksInZone(zone)\r\n    local objectsInZone = zone.getObjects()\r\n    local decksFound = {}\r\n    for i, object in ipairs(objectsInZone) do\r\n        if object.tag == \"Deck\" then\r\n            return getObjectFromGUID(object.guid)\r\n        end\r\n    end\r\n    if #decksFound > 0 then\r\n        return decksFound\r\n    else\r\n        return nil\r\n    end\r\nend\r\n\r\nfunction findCardsInZone(zone)\r\n    local objectsInZone = zone.getObjects()\r\n    local decksFound = {}\r\n    for i, object in ipairs(objectsInZone) do\r\n        if object.tag == \"Card\" then\r\n            return getObjectFromGUID(object.guid)\r\n        end\r\n    end\r\n    if #decksFound > 0 then\r\n        return decksFound\r\n    else\r\n        return nil\r\n    end\r\nend\r\n\r\nfunction randomMarket()\r\n  print(\"Taking Random Market Card\")\r\n  random_deck = getObjectFromGUID(market_random_deck_id)\r\n\r\n  random_deck.shuffle()\r\n  math.randomseed(os.time())\r\n  deck_index = math.random(0, 5)\r\n  market_choice = random_deck.takeObject({index = deck_index})\r\n  market_choice.setPositionSmooth(Vector(56.89, 1.406, 15.66), false, false)\r\n  market_funcs[market_setups[market_choice.getGUID()]]()\r\nend\r\n\r\nfunction setupMarket()\r\n    print(\"Getting Market Card from board\")\r\n    math.randomseed(os.time())\r\n    market_choice = findCardsInZone(getObjectFromGUID(marketScript))\r\n    if market_choice == nil then\r\n      broadcastToAll(\"Select a single market card first.\", {r=1,b=0.2,g=0.2})\r\n      return(nil)\r\n    end\r\n    market_choice.setPositionSmooth(Vector(56.89, 1.406, 15.66), false, false)\r\n\r\n\r\n    --for key, value in pairs(market_setups) do\r\n    --    print(key, \" -- \", value)\r\n    --end\r\n    --market_setups['b341a5']()\r\n    market_funcs[market_setups[market_choice.getGUID()]]()\r\n    --setupMarket4()\r\nend\r\n\r\nfunction setDecks()\r\n  gem_random_deck_id = findDecksInZone(getObjectFromGUID(gem_random_script)).getGUID()\r\n  getObjectFromGUID(gem_random_deck_id).shuffle()\r\n  relic_random_deck_id = findDecksInZone(getObjectFromGUID(relic_random_script)).getGUID()\r\n  getObjectFromGUID(relic_random_deck_id).shuffle()\r\n  spell_random_deck_id = findDecksInZone(getObjectFromGUID(spell_random_script)).getGUID()\r\n  getObjectFromGUID(spell_random_deck_id).shuffle()\r\nend\r\n\r\nfunction market_funcs.setupMarket1()\r\n    --[[\r\n    <4g 4g anyG\r\n    anyR anyR <5S\r\n    <5S >5S >5s\r\n    ]]\r\n    print('Market 1')\r\n    setDecks()\r\n\r\n    getGem23(spot11)\r\n    getGem4(spot12)\r\n    getGemAny(spot13)\r\n\r\n    getRelicAny(spot21)\r\n    getRelicAny(spot22)\r\n    getSpell234(spot23)\r\n\r\n    getSpell234(spot31)\r\n    getSpell678(spot32)\r\n    getSpell678(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket2()\r\n    --[[\r\n    >3G >3G >3G\r\n    >4R anyR <6S\r\n    <6S <6S >6S\r\n    ]]\r\n    print('Market 2')\r\n    setDecks()\r\n\r\n    getGem456(spot11)\r\n    getGem456(spot12)\r\n    getGem456(spot13)\r\n\r\n    getRelic5678(spot21)\r\n    getRelicAny(spot22)\r\n    getSpell2345(spot23)\r\n\r\n    getSpell2345(spot31)\r\n    getSpell2345(spot32)\r\n    getSpell78(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket3()\r\n    --[[\r\n    <4G 45G 45G\r\n    anyR 3S 4S\r\n    >5S >5S >5S\r\n    ]]\r\n    print('Market 3')\r\n    setDecks()\r\n\r\n    getGem23(spot11)\r\n    getGem45(spot12)\r\n    getGem45(spot13)\r\n\r\n    getRelicAny(spot21)\r\n    getSpell3(spot22)\r\n    getSpell4(spot23)\r\n\r\n    getSpell678(spot31)\r\n    getSpell678(spot32)\r\n    getSpell678(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket4()\r\n    --[[\r\n    >4G anyG anyG\r\n    <4R >4R  anyR\r\n    <5S >5S  anyS\r\n    ]]\r\n    setDecks()\r\n    -- >4G\r\n    getGem56(spot11)\r\n    getGemAny(spot12)\r\n    getGemAny(spot13)\r\n\r\n    getRelic23(spot21)\r\n    getRelic5678(spot22)\r\n    getRelicAny(spot23)\r\n\r\n    getSpell234(spot31)\r\n    getSpell678(spot32)\r\n    getSpellAny(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket5()\r\n    print('Market 5')\r\n    setDecks()\r\n    getGem2(spot11)\r\n    getGem3(spot12)\r\n    getGem4(spot13)\r\n\r\n    getGem5(spot21)\r\n    getRelicAny(spot22)\r\n    getSpell4(spot23)\r\n\r\n    getSpell5(spot31)\r\n    getSpell6(spot32)\r\n    getSpell78(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket6()\r\n    print('Market 6')\r\n    setDecks()\r\n    getGem3(spot11)\r\n    getGem4(spot12)\r\n    getRelic23(spot13)\r\n\r\n    getRelic5678(spot21)\r\n    getRelicAny(spot22)\r\n    getSpell34(spot23)\r\n\r\n    getSpell56(spot31)\r\n    getSpell56(spot32)\r\n    getSpell78(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket7()\r\n    print('Market 7')\r\n    setDecks()\r\n    getGem3(spot11)\r\n    getGem4(spot12)\r\n    getGem45(spot13)\r\n\r\n    getRelic23(spot21)\r\n    getRelic5678(spot22)\r\n    getSpell3(spot23)\r\n\r\n    getSpell4(spot31)\r\n    getSpell5(spot32)\r\n    getSpell78(spot33)\r\nend\r\n\r\nfunction market_funcs.setupMarket8()\r\n    print('Market 8')\r\n    setDecks()\r\n\r\n    getGem23(spot11)\r\n    getGemAny(spot12)\r\n    getGemAny(spot13)\r\n\r\n    getRelicAny(spot21)\r\n    getRelicAny(spot22)\r\n    getSpellAny(spot23)\r\n\r\n    getSpellAny(spot31)\r\n    getSpellAny(spot32)\r\n    getSpellAny(spot33)\r\nend\r\n\r\nfunction searchDeck(deck, charName, pos, rot, nameOrDes, error)\r\n    if (nameOrDes == \"Des\") then\r\n      --broadcastToAll(\"Looking for \" .. charName)\r\n    end\r\n    for _, card in pairs(deck.getObjects()) do\r\n        if (nameOrDes == \"Des\" and card.description == charName) or (nameOrDes == \"Name\" and card.name == charName) or (nameOrDes == \"Any\") then\r\n            return (deck.takeObject({guid = card.guid, position = pos, rotation = rot, smooth = false}))\r\n        end\r\n    end\r\n    local myError = error or \"\"\r\n    if (myError ~= \"\") then\r\n        broadcastToAll(error, {r = 1, g = 0, b = 0})\r\n    end\r\nend\r\n\r\nfunction searchGem(name)\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),name,barracksPos + vector(0, 7 + barracksVectorOffset, 0),{0,180,0},\"Name\",\"Cannot find \" .. name .. \" randomizer card in deck.\")\r\n  barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\nfunction searchRelic(name)\r\n  searchDeck(getObjectFromGUID(relic_random_deck_id),name,barracksPos + vector(0, 7 + barracksVectorOffset, 0),{0,180,0},\"Name\",\"Cannot find \" .. name .. \" randomizer card in deck.\")\r\n  barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\nfunction searchSpell(name)\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),name,barracksPos + vector(0, 7 + barracksVectorOffset, 0),{0,180,0},\"Name\",\"Cannot find \" .. name .. \" randomizer card in deck.\")\r\n  barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\n\r\n--function takeObject(object)\r\n  --allow_interaction = not object.hasAnyTag() or object.hasMatchingTag(self)\r\n  --ptint(allow_interaction)\r\n  --return (allow_interaction)\r\n--end\r\n-- GEM GETS --\r\nfunction checkTag(obj)\r\n  --print(obj.getTags())\r\n  if (obj.hasMatchingTag(self)) then\r\n    return (true)\r\nelse\r\n  return(false)\r\nend\r\n\r\nend\r\n\r\nfunction getGem23(market_location)\r\n  g2o = getObjectFromGUID(g2)\r\n  g3o = getObjectFromGUID(g3)\r\n  local myGem = 'Gem3'\r\n  local g2o_size = tablelength(g2o.getObjects())\r\n  local g3o_size = tablelength(g3o.getObjects())\r\n  local possible_gems = g2o_size + g3o_size\r\n  local chosen_gem = math.random(0, possible_gems - 1)\r\n\r\n  if chosen_gem < g2o_size then\r\n    myGem = 'Gem2'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n\r\nend\r\n\r\nfunction getGem45(market_location)\r\n  g4o = getObjectFromGUID(g4)\r\n  g5o = getObjectFromGUID(g5)\r\n  local myGem = 'Gem5'\r\n  local g4o_size = tablelength(g4o.getObjects())\r\n  local g5o_size = tablelength(g5o.getObjects())\r\n  local possible_gems = g4o_size + g5o_size\r\n  local chosen_gem = math.random(0, possible_gems - 1)\r\n\r\n  if chosen_gem < g4o_size then\r\n    myGem = 'Gem4'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n\r\nend\r\n\r\nfunction getGem56(market_location)\r\n  g6o = getObjectFromGUID(g6)\r\n  g5o = getObjectFromGUID(g5)\r\n  local myGem = 'Gem5'\r\n  local g6o_size = tablelength(g6o.getObjects())\r\n  local g5o_size = tablelength(g5o.getObjects())\r\n  local possible_gems = g6o_size + g5o_size\r\n  local chosen_gem = math.random(0, possible_gems - 1)\r\n\r\n  if chosen_gem < g6o_size then\r\n    myGem = 'Gem6'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\n\r\n\r\nfunction getGem456(market_location)\r\n  g4o = getObjectFromGUID(g4)\r\n  g5o = getObjectFromGUID(g5)\r\n  g6o = getObjectFromGUID(g6)\r\n  g4o_size = tablelength(g4o.getObjects())\r\n  g5o_size = tablelength(g5o.getObjects())\r\n  g6o_size = tablelength(g6o.getObjects())\r\n  local possible_gems = g6o_size + g5o_size + g4o_size\r\n  local chosen_gem = math.random(0, possible_gems - 1)\r\n  local myGem = 'Gem6'\r\n  if chosen_gem < g4o_size then\r\n      myGem = 'Gem4'\r\n  elseif chosen_gem - g4o_size < g5o_size then\r\n    myGem = 'Gem5'\r\n  end\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem2(market_location)\r\n  local myGem = 'Gem2'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n--  barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem3(market_location)\r\n  local myGem = 'Gem3'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem4(market_location)\r\n  local myGem = 'Gem4'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem5(market_location)\r\n  local myGem = 'Gem5'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n--  barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem6(market_location)\r\n  local myGem = 'Gem6'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGem7(market_location)\r\n  local myGem = 'Gem7'\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),myGem,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myGem .. \" randomizer card in deck.\")\r\n--  barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getGemAny(market_location)\r\n  searchDeck(getObjectFromGUID(gem_random_deck_id),\"myGem\",market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Any\",\"Cannot find any gems in the randomizer card deck.\")\r\n--  barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n--RELICS GET--\r\nfunction getRelic23(market_location)\r\n  local myRelic = 'Relic3'\r\n  r2o = getObjectFromGUID(r2)\r\n  r3o = getObjectFromGUID(r3)\r\n  r2o_size = tablelength(r2o.getObjects())\r\n  r3o_size = tablelength(r3o.getObjects())\r\n  local possible_relics = r2o_size + r3o_size\r\n  local chosen_relic = math.random(0, possible_relics - 1)\r\n\r\n  if chosen_relic < r2o_size then\r\n        myRelic = 'Relic2'\r\n    end\r\n  searchDeck(getObjectFromGUID(relic_random_deck_id),myRelic,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myRelic .. \" randomizer card in deck.\")\r\n  end\r\n\r\nfunction getRelic5678(market_location)\r\n  local myRelic = 'Relic8'\r\n  r5o = getObjectFromGUID(r5)\r\n  r6o = getObjectFromGUID(r6)\r\n  r7o = getObjectFromGUID(r7)\r\n  r8o = getObjectFromGUID(r8)\r\n  r5o_size = tablelength(r5o.getObjects())\r\n  r6o_size = tablelength(r6o.getObjects())\r\n  r7o_size = tablelength(r7o.getObjects())\r\n  r8o_size = tablelength(r8o.getObjects())\r\n  local possible_relics = r5o_size + r6o_size + r7o_size + r8o_size\r\n  local chosen_relic = math.random(0, possible_relics - 1)\r\n\r\n  if chosen_relic < r5o_size then\r\n        myRelic = 'Relic5'\r\n    elseif chosen_relic - r5o_size < r6o_size then\r\n        myRelic = 'Relic6'\r\n    elseif chosen_relic - r5o_size - r6o_size < r7o_size then\r\n        myRelic = 'Relic7'\r\n    end\r\n  searchDeck(getObjectFromGUID(relic_random_deck_id),myRelic,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. myRelic .. \" randomizer card in deck.\")\r\n  end\r\n\r\nfunction getRelicAny(market_location)\r\n  searchDeck(getObjectFromGUID(relic_random_deck_id),\"myRelic\",market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Any\",\"Cannot find any relics in the randomizer card deck.\")\r\n--  barracksVectorOffset = barracksVectorOffset + 1.5\r\nend\r\n\r\nfunction getSpell3(market_location)\r\n  local mySpell = 'Spell3'\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\nend\r\n\r\nfunction getSpell4(market_location)\r\n  local mySpell = 'Spell4'\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\nend\r\n\r\nfunction getSpell5(market_location)\r\n  local mySpell = 'Spell5'\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\nend\r\n\r\nfunction getSpell6(market_location)\r\n  local mySpell = 'Spell6'\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\nend\r\n\r\nfunction getSpellAny(market_location)\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),'mySpell',market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Any\",\"Cannot find any spells in the randomizer card deck.\")\r\nend\r\n\r\nfunction getSpell34(market_location)\r\n  s3o = getObjectFromGUID(s3)\r\n  s4o = getObjectFromGUID(s4)\r\n  local mySpell = 'Spell3'\r\n  local s3o_size = tablelength(s3o.getObjects())\r\n  local s4o_size = tablelength(s4o.getObjects())\r\n  local possible_spells = s3o_size + s4o_size\r\n  local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n  if chosen_spell < s4o_size then\r\n    mySpell = 'Spell4'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\n\r\nfunction getSpell56(market_location)\r\n  s6o = getObjectFromGUID(s6)\r\n  s5o = getObjectFromGUID(s5)\r\n  local mySpell = 'Spell5'\r\n  local s6o_size = tablelength(s6o.getObjects())\r\n  local s5o_size = tablelength(s5o.getObjects())\r\n  local possible_spells = s6o_size + s5o_size\r\n  local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n  if chosen_spell < s6o_size then\r\n    mySpell = 'Spell6'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\n\r\nfunction getSpell78(market_location)\r\n  s7o = getObjectFromGUID(s7)\r\n  s8o = getObjectFromGUID(s8)\r\n  local mySpell = 'Spell8'\r\n  local s7o_size = tablelength(s7o.getObjects())\r\n  local s8o_size = tablelength(s8o.getObjects())\r\n  local possible_spells = s8o_size + s7o_size\r\n  local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n  if chosen_spell < s7o_size then\r\n    mySpell = 'Spell7'\r\n  end\r\n\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n  --barracksVectorOffset = barracksVectorOffset + 1\r\nend\r\n\r\nfunction getSpell5678(market_location)\r\n  local mySpell = 'Spell8'\r\n  s5o = getObjectFromGUID(s5)\r\n  s6o = getObjectFromGUID(s6)\r\n  s7o = getObjectFromGUID(s7)\r\n  s8o = getObjectFromGUID(s8)\r\n  s5o_size = tablelength(s5o.getObjects())\r\n  s6o_size = tablelength(s6o.getObjects())\r\n  s7o_size = tablelength(s7o.getObjects())\r\n  s8o_size = tablelength(s8o.getObjects())\r\n  local possible_spells = s5o_size + s6o_size + s7o_size + s8o_size\r\n  local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n  if chosen_spell < s5o_size then\r\n        mySpell = 'Spell5'\r\n    elseif chosen_spell - s5o_size < s6o_size then\r\n        mySpell = 'Spell5'\r\n    elseif chosen_spell - s5o_size - s6o_size < s7o_size then\r\n        mySpell = 'Spell6'\r\n    elseif chosen_spell - s5o_size - s6o_size - s7o_size < s8o_size then\r\n      mySpell = 'Spell7'\r\n    end\r\n  searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n  end\r\n\r\n  function getSpell2345(market_location)\r\n    local mySpell = 'Spell2'\r\n    s5o = getObjectFromGUID(s5)\r\n    s4o = getObjectFromGUID(s4)\r\n    s3o = getObjectFromGUID(s3)\r\n    s2o = getObjectFromGUID(s2)\r\n    s5o_size = tablelength(s5o.getObjects())\r\n    s4o_size = tablelength(s4o.getObjects())\r\n    s3o_size = tablelength(s3o.getObjects())\r\n    s2o_size = tablelength(s2o.getObjects())\r\n    local possible_spells = s5o_size + s4o_size + s3o_size + s2o_size\r\n    local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n    if chosen_spell < s5o_size then\r\n          mySpell = 'Spell5'\r\n      elseif chosen_spell - s5o_size < s4o_size then\r\n          mySpell = 'Spell4'\r\n      elseif chosen_spell - s5o_size - s4o_size < s3o_size then\r\n          mySpell = 'Spell3'\r\n      elseif chosen_spell - s5o_size - s4o_size - s3o_size < s2o_size then\r\n        mySpell = 'Spell2'\r\n      end\r\n    searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n    end\r\n\r\n    function getSpell234(market_location)\r\n      s2o = getObjectFromGUID(s2)\r\n      s3o = getObjectFromGUID(s3)\r\n      s4o = getObjectFromGUID(s4)\r\n      local mySpell = 'Spell2'\r\n      local s2o_size = tablelength(s2o.getObjects())\r\n      local s3o_size = tablelength(s3o.getObjects())\r\n      local s4o_size = tablelength(s4o.getObjects())\r\n      local possible_spells = s3o_size + s4o_size + s2o_size\r\n      local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n      if chosen_spell < s4o_size then\r\n        mySpell = 'Spell4'\r\n      elseif chosen_spell - s4o_size < s3o_size then\r\n        mySpell = 'Spell3'\r\n      end\r\n\r\n      searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n      --barracksVectorOffset = barracksVectorOffset + 1\r\n    end\r\n\r\n    function getSpell678(market_location)\r\n      s6o = getObjectFromGUID(s6)\r\n      s7o = getObjectFromGUID(s7)\r\n      s8o = getObjectFromGUID(s8)\r\n      local mySpell = 'Spell8'\r\n      local s6o_size = tablelength(s6o.getObjects())\r\n      local s7o_size = tablelength(s7o.getObjects())\r\n      local s8o_size = tablelength(s8o.getObjects())\r\n      local possible_spells = s6o_size + s7o_size + s8o_size\r\n      local chosen_spell = math.random(0, possible_spells - 1)\r\n\r\n      if chosen_spell < s6o_size then\r\n        mySpell = 'Spell6'\r\n      elseif chosen_spell - s6o_size < s7o_size then\r\n        mySpell = 'Spell7'\r\n      end\r\n\r\n      searchDeck(getObjectFromGUID(spell_random_deck_id),mySpell,market_location + vector(0, 5 + barracksVectorOffset, 0),{0,180,0},\"Des\",\"Cannot find a \" .. mySpell .. \" randomizer card in deck.\")\r\n      --barracksVectorOffset = barracksVectorOffset + 1\r\n    end\r\n\r\n\r\n\r\nfunction tablelength(T)\r\n  local count = 0\r\n  for _ in pairs(T) do count = count + 1 end\r\n  return count\r\nend",
  "LuaScriptState": "",
  "XmlUI": "",
  "AttachedSnapPoints": [
    {
      "Position": {
        "x": 0.0000588442163,
        "y": 0.202491671,
        "z": -0.0000124731105
      }
    }
  ]
}