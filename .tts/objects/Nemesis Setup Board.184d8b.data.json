{
  "GUID": "184d8b",
  "Name": "Custom_Tile",
  "Transform": {
    "posX": -69.0987854,
    "posY": 1.58510065,
    "posZ": 24.6555977,
    "rotX": 0.0168700162,
    "rotY": 180.00087,
    "rotZ": 0.079876706,
    "scaleX": 6.918265,
    "scaleY": 1,
    "scaleZ": 6.918265
  },
  "Nickname": "Nemesis Setup Board",
  "Description": "0c7a9c",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "ColorDiffuse": {
    "r": 0,
    "g": 0,
    "b": 0
  },
  "Tags": [
    "setup"
  ],
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": true,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": false,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/54707509771323956/784C39CCCFF75DDA294F49786E1F7A21153B75CA/",
    "ImageSecondaryURL": "",
    "ImageScalar": 1,
    "WidthScale": 0,
    "CustomTile": {
      "Type": 0,
      "Thickness": 0.1,
      "Stackable": false,
      "Stretch": true
    }
  },
  "LuaScript": "info = {}\r\nobj_GUID = {}\r\nme = {}\r\nmePos = {}\r\nbagNum = 1\r\nzone_GUID = ''\r\nmyPlayer = ''\r\nPlayerVal = 2\r\nBattleVal = 1\r\nmarketDone = false\r\n\r\nlegacyOfGraveholdOn = true;\r\nkillSwitch = false\r\ncanContinue =\r\n{\r\n [1] =  false,\r\n [2] = false,\r\n [3] = true\r\n}\r\nminorBoardStore = ''\r\nmainBoardStore = ''\r\n\r\n--nemTier1 = {-83.55, 1.61, 1.5}\r\n--nemTier2 = {-74.94, 1.61, 1.5}\r\n--nemTier3 = {-66.78, 1.61, 1.5}\r\nnemTier1 = {-28.50, 1.95, 79.50}\r\nnemTier2 = {-19.50, 1.95, 79.50}\r\nnemTier3 = {-11.50, 1.95, 79.50}\r\n\r\nplayer1BoardGUID = 'c7768d'\r\n\r\nplayerBoardGUID = {\r\n  [1] = '5ebb47',\r\n  [2] = 'e87d81',\r\n  [3] = '7ff2e6',\r\n  [4] = 'c3c58d'\r\n}\r\n\r\nbalanceVariant = 0\r\n\r\nturnOrderCard = nil\r\nturnOrderCardAlt = nil\r\n\r\nforceMythBone = false\r\nmythLife = ''\r\nboneLife = ''\r\n\r\nnemesisTokensGUID = '3a7b1b'\r\n\r\n--buildTier1 = {-83.55, 1.61, -11.05}\r\n--buildTier2 = {-74.94, 1.61, -11.05}\r\n--buildTier3 = {-66.78, 1.61, -11.05}\r\nbuildTier1 = {-28.50, 1.95, 67.84}\r\nbuildTier2 = {-19.50, 1.95, 67.84}\r\nbuildTier3 = {-11.50, 1.95, 67.84}\r\n\r\ntier1Select = '05a93c'\r\ntier2Select = '7e6a56'\r\ntier3Select = '86c358'\r\n\r\nboardGUID = 'd3fa17'\r\nsubboardGUID = '6dcf27'\r\n\r\nmainBoardOffset = {-3,5,-6.37}\r\nnemesisDeck = vector(-16.09,6,0.2)\r\nsubDeck = vector(10.28,6,2.11)\r\n\r\nmythBoard = vector(-54.71, 1.56, 2.82)\r\nzone_GUID = '5b5b88'\r\n\r\nnemesisLifeObject = '9197a2'\r\n\r\ntier1Zone = '1c035a'\r\ntier2Zone = '971a74'\r\ntier3Zone = 'c89146'\r\nstoreND = ''\r\nlifeTrackerKill = ''\r\n\r\nnemesis_table = {\r\n    [1] = {\r\n        [1] = 1,\r\n        [2] = 3,\r\n        [3] = 5,\r\n        [4] = 8\r\n       },\r\n    [2] = {\r\n        [1] = 3,\r\n        [2] = 5,\r\n        [3] = 6,\r\n        [4] = 7\r\n    },\r\n    [3] = {\r\n        [1] = 7,\r\n        [2] = 7,\r\n        [3] = 7,\r\n        [4] = 7\r\n    }\r\n}\r\n\r\nupgrade_table = {\r\n    [1] = {\r\n        [1] = 0,\r\n        [2] = 1,\r\n        [3] = 2,\r\n        [4] = 3\r\n       },\r\n    [2] = {\r\n        [1] = 0,\r\n        [2] = 3,\r\n        [3] = 4,\r\n        [4] = 5\r\n    },\r\n    [3] = {\r\n        [1] = 0,\r\n        [2] = 3,\r\n        [3] = 5,\r\n        [4] = 7\r\n    }\r\n}\r\n\r\ndeck_id = {\r\n\r\n[1] = '09b945',\r\n[2] = '0af199',\r\n[3] = '5b6ce9',\r\n[4] = '964004',\r\n[5] = '0261f3',\r\n[6] = 'cb11f4'\r\n}\r\n\r\nnem_deck1_table = {\r\n  [1] = '9024e2', -- aeon\r\n  [2] = 'db138c', -- we\r\n  [3] = 'b19403', -- legacy\r\n  [4] = 'b511b8', -- new age\r\n  [5] = '5ba8a0', --outcasts\r\n  [6] = 'ff0396', --promo\r\n  [7] = '998800', -- minions\r\n  [8] = '7edaba', --powers\r\n  [9] = 'ddb49f', -- attacks,\r\n  [10] = '964004', --upgraded all\r\n  [11] = '433aa4', --upgraded new age\r\n  [12] = '69fb05', --upgraded outcasts\r\n  [13] = '2c0f7f', --upgraded legacy\r\n  [14] = '2894dd', --log\r\n  [15] = 'acdf1c', --log upg\r\n  [16] = '9b2138', --past and future up\r\n  [17] = 'ee5ea3', --the descent\r\n  [18] = '823a37'--upgraded descent\r\n}\r\n\r\nnem_deck2_table = {\r\n  [1] = '10fe3a', -- aeon\r\n  [2] = 'e87bf1', -- we\r\n  [3] = '8709b4', -- legacy\r\n  [4] = 'b83fa5', -- new age\r\n  [5] = '888a0f', --outcasts\r\n  [6] = '268075', --promo\r\n  [7] = 'a54e60', -- minions\r\n  [8] = '596d42', --powers\r\n  [9] = '4dab82', -- attacks\r\n  [10] = '0261f3', --upgraded all\r\n  [11] = '3115e2', --upgraded new age\r\n  [12] = '194b52', --upgraded outcasts\r\n  [13] = 'd92ae1', --upgraded legacy\r\n  [14] = '8579f3', --log\r\n  [15] = 'e047f1', --log upg\r\n  [16] = 'e22a68', -- past and future up\r\n  [17] = '3c0bfc', --the descent\r\n  [18] ='9cf8da'--upgraded descent\r\n}\r\n\r\nnem_deck3_table = {\r\n  [1] = '7dd9e8', -- aeon\r\n  [2] = 'e3305d', -- we\r\n  [3] = 'e7c453', -- legacy\r\n  [4] = '7784dc', -- new age\r\n  [5] = '17140c', --outcasts\r\n  [6] = '5d71a8', --promo\r\n  [7] = '0f5ecb', -- minions\r\n  [8] = '763314', --powers\r\n  [9] = '454288', -- attacks\r\n  [10] = 'cb11f4', --upgraded all\r\n  [11] = 'e9524d', --upgraded new age\r\n  [12] = 'b1095d', --upgraded outcasts\r\n  [13] = 'a82744', --upgraded legacy\r\n  [14] = '7f9f4d', --log\r\n  [15] = '0e3853', --log upg\r\n  [16] = '45d001', --past and future up\r\n  [17] = '626b76', --the descent\r\n  [18] = 'e47a71' --upgraded descent\r\n}\r\n\r\nshop_table = {\r\n  [1] = '243c0f',\r\n  [2] = '27cf5f',\r\n  [3] = 'c08962',\r\n  [4] = 'd46559',\r\n  [5] = '9bad65',\r\n  [6] = '5ce8bd',\r\n  [7] = '00e430',\r\n  [8] = '8bea37',\r\n  [9] = 'e1bcd8'\r\n}\r\n\r\nshop_vector = {\r\n  [1] = Vector(28.928, 1.64, 23.46),\r\n  [2] = Vector(36.06, 1.64, 23.46),\r\n  [3] = Vector(43.27, 1.64, 23.46),\r\n  [4] = Vector(28.928, 1.64, 13.75),\r\n  [5] = Vector(36.06, 1.64, 13.75),\r\n  [6] = Vector(43.27, 1.64, 13.75),\r\n  [7] = Vector(28.928, 1.64, 4.06),\r\n  [8] = Vector(36.06, 1.64, 4.06),\r\n  [9] = Vector(43.27, 1.64, 4.06)\r\n}\r\nlocal bV1X = -51.59\r\nlocal bV2Y = 72.62\r\nlocal bV1Add = 6.68\r\nlocal bV2Add = -9.71\r\nlocal bVZ = 5\r\nbalance_vector = {\r\n  --[1] = Vector(-113.23, 1.69, 69.51),\r\n  --[2] = Vector(-106.55, 1.69, 69.51),\r\n  --[3] = Vector(-99.87, 1.69, 69.51),\r\n  --[4] = Vector(-113.23, 1.69, 60.42),\r\n  --[5] = Vector(-106.55, 1.69, 60.42),\r\n  --[6] = Vector(-99.87, 1.69, 60.42),\r\n  --[7] = Vector(-113.23, 1.69, 51.06),\r\n  --[8] = Vector(-106.55, 1.69, 51.06),\r\n  --[9] = Vector(-99.87, 1.69, 51.06),\r\n  [1] = Vector(bV1X, bVZ, bV2Y),\r\n  [2] = Vector(bV1X + bV1Add, bVZ, bV2Y),\r\n  [3] = Vector(bV1X + (bV1Add*2), bVZ, bV2Y),\r\n  [4] = Vector(bV1X, bVZ, bV2Y + bV2Add),\r\n  [5] = Vector(bV1X + bV1Add, bVZ, bV2Y + bV2Add),\r\n  [6] = Vector(bV1X + (bV1Add*2), bVZ, bV2Y + bV2Add),\r\n  [7] = Vector(bV1X, bVZ, bV2Y + (bV2Add*2)),\r\n  [8] = Vector(bV1X + bV1Add, bVZ, bV2Y+ (bV2Add*2)),\r\n  [9] = Vector(bV1X + (bV1Add*2), bVZ,bV2Y+ (bV2Add*2)),\r\n}\r\n\r\nturnDeck = 'd3724a'\r\nturnDiscard = '74276a'\r\nturnVariant = true\r\nturn_table = {\r\n  [1] = 'ab0228',\r\n  [2] = '3f9c6d',\r\n  [3] = 'a93efc',\r\n  [4] = '426293',\r\n  [5] = 'ee8f9a', --four player new\r\n  [6] = '373770',\r\n  [7] = 'dc4292',\r\n  [8] = '0de9fc', -- three player new\r\n  [9] = '1b87f7'\r\n}\r\n\r\nbalancedTiers =\r\n{\r\n  [1] = --tier 1\r\n  {\r\n    [1] = 2,\r\n    [2] = 3,\r\n    [3] = 3,\r\n  },\r\n  [2] = -- tier 2\r\n  {\r\n    [1] = 2,\r\n    [2] = 3,\r\n    [3] = 2,\r\n  },\r\n  [3] = --tier 3\r\n  {\r\n    [1] = 1,\r\n    [2] = 3,\r\n    [3] = 3,\r\n  },\r\n  [4] = --tier 1 type 2\r\n  {\r\n    [1] = 2,\r\n    [2] = 4,\r\n    [3] = 2,\r\n  },\r\n  [5] = -- tier 2\r\n  {\r\n    [1] = 3,\r\n    [2] = 3,\r\n    [3] = 1,\r\n  },\r\n  [6] = --tier 3\r\n  {\r\n    [1] = 1,\r\n    [2] = 4,\r\n    [3] = 2,\r\n  },\r\n  [7] = --tier 1 type 3\r\n  {\r\n    [1] = 2,\r\n    [2] = 4,\r\n    [3] = 2,\r\n  },\r\n  [8] = -- tier 2\r\n  {\r\n    [1] = 2,\r\n    [2] = 2,\r\n    [3] = 3,\r\n  },\r\n  [9] = --tier 3\r\n  {\r\n    [1] = 2,\r\n    [2] = 2,\r\n    [3] = 3,\r\n  }\r\n}\r\n\r\nfunction onObjectLeaveContainer(container, leave_object) --why did they have to make nemesis cards usable by players :V\r\n  if (storeND ~= \"\") then\r\n\r\n  if (container.type == \"Deck\" and container == storeND) then\r\n   leave_object.addTag('nemesisDeckCard')\r\n end\r\nend\r\nend\r\n\r\n--upgraded basics guid --\r\nupgradedScript ={\r\n  [1] = 'b2b756',\r\n  [2] = '805dbf',\r\n  [3] = '587d07'\r\n}\r\n\r\nnemesisBagDeck = {\r\n['NemesisRandomizer1'] = 'fe9e05',\r\n['NemesisRandomizer2'] = '83ce89',\r\n['NemesisRandomizer3'] = '835c1c',\r\n['NemesisRandomizer4'] = '5015ba'\r\n}\r\n\r\n\r\nfunction onSave()\r\n    local tableToSave = {};\r\n\r\n    if PlayerVal then\r\n\r\n            tableToSave['PlayerVal'] = PlayerVal\r\n\r\n    end\r\n    if BattleVal then\r\n\r\n            tableToSave['BattleVal'] = BattleVal\r\n\r\n    end\r\n\r\n\r\n\r\n    saved_data = JSON.encode(tableToSave)\r\n    return saved_data\r\nend\r\n\r\nfunction onload(saved_data)\r\n\r\n\r\n    if saved_data != nil then\r\n        loaded_data = JSON.decode(saved_data)\r\n        if loaded_data != nil then\r\n            PlayerVal = loaded_data['PlayerVal']\r\n            BattleVal = loaded_data['BattleVal']\r\n        else\r\n            PlayerVal = 2\r\n            BattleVal = 1\r\n        end\r\n    else\r\n        PlayerVal = 2\r\n        BattleVal = 1\r\n    end\r\n\r\n  local buttonWidth = 380\r\n  local buttonHeight = 150\r\n  local buttonHeightBig = 200\r\n  local leftPos = -1.35\r\n  local middlePos = -0.6\r\n  local rightPos = leftPos + ((math.abs(leftPos) - math.abs(middlePos))*2)\r\n  local right_rightPos = 0.9\r\n  local row0 = -0.5\r\n  local row1 = -0.2\r\n  local row2 = 0.1\r\n  local row3 = 0.4\r\n  local row4 = 0.76\r\n  me = getObjectFromGUID(self.guid)\r\n  mePos = me.getPosition()\r\n  mainPos = getObjectFromGUID(boardGUID).getPosition()\r\n  subPos = getObjectFromGUID(subboardGUID).getPosition()\r\n  buttonParameters =\r\n  {\r\n\r\n      PlayerVal =\r\n      {\r\n          index = 0,\r\n          label = tostring(PlayerVal),\r\n          click_function = 'SayPlayer',\r\n          function_owner = self, label = \"2\",\r\n          position = {-2.4, 0.2, 0.7}, width = 200, height = 200, color = {0, 0, 0, 1}, font_color = {0, 1, 0, 1}, tooltip = \"Current Players\"\r\n\r\n      },\r\n\r\n      PlayerInc =\r\n      {\r\n        index = 1,\r\n          label = '+',\r\n          click_function = 'PlayerInc',\r\n          function_owner = self, label = \"+\", position = {-2.1, 0.2, 0.7}, tooltip = \"Add Player\"\r\n      }\r\n      ,\r\n      PlayerDec =\r\n      {\r\n        index = 2,\r\n          label = '-', --Text to display\r\n          click_function = 'PlayerDec',\r\n          function_owner = self, label = \"-\", position = {-2.7, 0.2, 0.7}, tooltip = \"Remove Player\"\r\n      },\r\n\r\n\r\n      BattleVal =\r\n      {\r\n          index = 3,\r\n          label = tostring(BattleVal),\r\n          click_function = 'SayBattle',\r\n          function_owner = self, label = \"1\",\r\n          position = {-2.4, 0.2, -0.3}, width = 200, height = 200, color = {0, 0, 0, 1}, font_color = {0, 1, 0, 1}, tooltip = \"Current Battle (Leave at one when not playing Expedition)\"\r\n\r\n      },\r\n\r\n     BattleInc =\r\n      {\r\n        index = 4,\r\n          label = '+',\r\n          click_function = 'BattleInc',\r\n          function_owner = self, label = \"+\", position = {-2.1, 0.2, -0.3}, tooltip = \"Increase Battle\"\r\n      }\r\n      ,\r\n      BattleDec =\r\n      {\r\n        index = 5,\r\n          label = '-', --Text to display\r\n          click_function = 'BattleDec',\r\n          function_owner = self, label = \"-\", position = {-2.7, 0.2, -0.3}, tooltip = \"Lower Battle\"\r\n      },\r\n\r\n      TurnVariantButton =\r\n      {\r\n        index = 6,\r\n        click_function = 'variant',\r\n        function_owner = self,\r\n        label = 'New Age\\nTurn Variant',\r\n        position = {-2.4, 0.2, 0.1},\r\n        rotation = {0,0,0},\r\n        width = 500,\r\n        height = 200,\r\n        font_size = 60,\r\n        color = {r = 0, g = 0.2, b = 1},\r\n        tooltip = \"Change between classic or updated Turn Orders for 3 and 4 player.\"\r\n      },\r\n\r\n\r\n      AeonNemesis =\r\n      {\r\n        index = 7,\r\n        click_function = 'AeonNem',\r\n        function_owner = self,\r\n        label = 'Aeons End',\r\n        position = {leftPos,0.2,row0},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        tooltip = \"Add Aeon End Basic Nemesis Cards\"\r\n      },\r\n\r\n      OutcastNemesis =\r\n      {\r\n        index = 8,\r\n        click_function = 'OutcastNem',\r\n        function_owner = self,\r\n        label = 'Outcasts',\r\n        position = {middlePos,0.2,row0},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        tooltip = \"Add Outcasts Basic Nemesis Cards\"\r\n      },\r\n\r\n      WarNemesis =\r\n      {\r\n        index = 9,\r\n        click_function = 'WarNem',\r\n        function_owner = self,\r\n        label = 'War Eternal',\r\n        position = {leftPos,0.2,row1},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        tooltip = \"Add War Eternal Basic Nemesis Cards\"\r\n      },\r\n\r\n      MinorNemesis =\r\n      {\r\n        index = 10,\r\n        click_function = 'MinorNem',\r\n        function_owner = self,\r\n        label = 'Small Box\\n& Kickstarter',\r\n        position = {middlePos,0.2,row1},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 55,\r\n        tooltip = \"Add Small Box Expansion & Promotional Kickstarter Basic Nemesis Cards\"\r\n      },\r\n\r\n      LegacyNemesis =\r\n      {\r\n        index = 11,\r\n        click_function = 'LegacyNem',\r\n        function_owner = self,\r\n        label = 'Legacy',\r\n        position = {leftPos,0.2,row2},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        tooltip = \"Add Legacy Basic Nemesis Cards\"\r\n      },\r\n\r\n      AgeNemesis =\r\n      {\r\n        index = 12,\r\n        click_function = 'AgeNem',\r\n        function_owner = self,\r\n        label = 'New Age',\r\n        position = {middlePos,0.2,row2},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        tooltip = \"Add New Age Basic Nemesis Cards\"\r\n      },\r\n      AllNemesisBalanced =\r\n      {\r\n        index = 13,\r\n        click_function = 'AllNemBalanced',\r\n        function_owner = self,\r\n        label = 'All Games\\n(Balanced)',\r\n        position = {leftPos,0.2,row4},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeightBig,\r\n        font_size = 60,\r\n        color = {r = 0.7, g = 0.7, b = 0.1},\r\n        tooltip = \"Add All Basic Nemesis Cards, mixed in the same manner that the base games do. Will choose randomly between AE/WE, Legacy, or NA/Outcasts style deck contstruction. Right click to pick specific style.\"\r\n      },\r\n\r\n      AllNemesis =\r\n      {\r\n        index = 14,\r\n        click_function = 'AllNem',\r\n        function_owner = self,\r\n        label = 'All Games\\n(Chaos)',\r\n        position = {middlePos,0.2,row4},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeightBig,\r\n        font_size = 60,\r\n        color = {r = 0.7, g = 0.2, b = 0.2},\r\n        tooltip = \"Add All Basic Nemesis Cards without regards to quantity of card types. Probably a lot harder!\"\r\n      },\r\n      NewAgeUpgrade =\r\n      {\r\n        index = 15,\r\n        click_function = 'NewUpg',\r\n        function_owner = self,\r\n        label = 'New Age\\nUpgraded',\r\n        position = {rightPos,0.2,row1},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        color = {r= 0.8, g = 0.4, b = 0.8},\r\n        tooltip = \"Add New Age Upgraded Basic Nemesis Cards\"\r\n      },\r\n      OutcastsUpgrade =\r\n      {\r\n        index = 16,\r\n        click_function = 'OutUpg',\r\n        function_owner = self,\r\n        label = 'Outcasts\\nUpgraded',\r\n        position = {rightPos,0.2,row2},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = 60,\r\n        color = {r= 0.8, g = 0.4, b = 0.8},\r\n        tooltip = \"Add Outcasts Upgraded Basic Nemesis Cards\"\r\n      },\r\n      LegacyUpgrade =\r\n      {\r\n        index = 17,\r\n        click_function = 'LegUpg',\r\n        function_owner = self,\r\n        label = 'Legacy\\nUpgraded',\r\n        position = {right_rightPos,0.2,row2},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeight,\r\n        font_size = math.floor(60),\r\n        color = {r= 0.5, g = 0.3, b = 0.6},\r\n        tooltip = \"Add Legacy Upgraded Basic Nemesis Cards. These are fan edits of the final evolution cards, includes duplicates from New Age/Outcasts that existed in Legacy\"\r\n      },\r\n      AllUpgrade =\r\n      {\r\n        index = 18,\r\n        click_function = 'AllUpg',\r\n        function_owner = self,\r\n        label = 'All\\nUpgraded',\r\n        position = {(rightPos + right_rightPos)/2,0.2,row4},\r\n        rotation = {0,0,0},\r\n        width = buttonWidth,\r\n        height = buttonHeightBig,\r\n        font_size = 60,\r\n        color = {r= 0.2, g = 0.1, b = 0.8},\r\n        tooltip = \"Add ALL Upgraded Basic Nemesis Cards. You will not get the same ratio as normal.\"\r\n      },\r\n        --[[GraveholdUpgrade =\r\n        {\r\n          index = 19,\r\n          click_function = 'GraveUpg',\r\n          function_owner = self,\r\n          label = 'Gravehold\\nUpgraded',\r\n          position = {rightPos+0.43,0.2,row3},\r\n          rotation = {0,0,0},\r\n          width = buttonWidth*0.75,\r\n          height = buttonHeight,\r\n          font_size = math.floor(60*0.75),\r\n          color = {r= 0.35, g = 0.2, b = 0.4},\r\n          font_color = {r = 0.4, g = 0.4, b = 0.4},\r\n          tooltip = \"Add Legacy of Gravehold Upgraded Basic Nemesis Cards. These are fan edits of upgraded basics.\\n[b]These were later reprinted and replaced by versions in the Past and Future Wave 7 release.[/b]\\nThere are fewer in this set than normal and heavily rely on the Fire Mechanic.\"\r\n        },]]--\r\n        PastFutureUpgrade =\r\n        {\r\n          index = 19,\r\n          click_function = 'FutureUpg',\r\n          function_owner = self,\r\n          label = 'Past & Future\\nUpgraded',\r\n          position = {right_rightPos,0.2,row1},\r\n          rotation = {0,0,0},\r\n          width = buttonWidth,\r\n          height = buttonHeight,\r\n          font_size = 55,\r\n          color = {r= 0.8, g = 0.4, b = 0.8},\r\n          tooltip = \"Add Past and Future Upgraded Basic Nemesis Cards\\nThese are official reprints of the Upgraded Basics from Legacy of Gravehold and include new ones to bulk up the numbers.\\n[i](These make heavy use of the Fire token mechanic)[/i]\"\r\n        },\r\n        GraveholdNemesis =\r\n        {\r\n          index = 20,\r\n          click_function = 'GraveNem',\r\n          function_owner = self,\r\n          label = 'Legacy of\\nGravehold',\r\n          position = {leftPos,0.2,row3},\r\n          rotation = {0,0,0},\r\n          width = buttonWidth,\r\n          height = buttonHeight,\r\n          font_size = 55,\r\n          tooltip = \"Add Legacy of Gravehold Basic Nemesis Cards\\n[i](These make heavy use of the Fire token mechanic)[/i]\"\r\n        },\r\n        DescentNemesis =\r\n        {\r\n          index = 21,\r\n          click_function = 'DescentNem',\r\n          function_owner = self,\r\n          label = 'Descent',\r\n          position = {middlePos,0.2,row3},\r\n          rotation = {0,0,0},\r\n          width = buttonWidth,\r\n          height = buttonHeight,\r\n          font_size = 60,\r\n          tooltip = \"Add the Descent Basic Nemesis Cards\"\r\n        },\r\n        DescentUpgrade =\r\n        {\r\n          index = 22,\r\n          click_function = 'DescentUpg',\r\n          function_owner = self,\r\n          label = 'Descent\\nUpgraded',\r\n          position = {(rightPos + right_rightPos)/2,0.2,row3},\r\n          rotation = {0,0,0},\r\n          width = buttonWidth,\r\n          height = buttonHeight,\r\n          font_size = 55,\r\n          color = {r= 0.8, g = 0.4, b = 0.8},\r\n          tooltip = \"Add Descent Upgraded Basic Nemesis Cards\"\r\n        },\r\n    }\r\n\r\n\r\n\r\n  for i, v in pairs(buttonParameters) do\r\n      self.createButton(v)\r\n  end\r\nend\r\n\r\n\r\n\r\nfunction SayPlayer()\r\n  print(\"The game is current set for \" .. tostring(PlayerVal) .. \" players.\")\r\nend\r\n\r\nfunction PlayerInc()\r\n  if PlayerVal < 4 then\r\n    PlayerVal = PlayerVal+1\r\n    getObjectFromGUID('b9111a').setVar('playerval',PlayerVal)\r\n  end\r\n\r\n\r\n    -- update the attack 'button' label.\r\n    buttonParameters.PlayerVal.label = PlayerVal\r\n    self.editButton(buttonParameters.PlayerVal)\r\nend\r\n\r\nfunction PlayerDec()\r\n  if PlayerVal > 1 then\r\n    PlayerVal = PlayerVal-1\r\n    getObjectFromGUID('b9111a').setVar('playerval',PlayerVal)\r\n  end\r\n\r\n\r\n    -- update the attack 'button' label.\r\n    buttonParameters.PlayerVal.label = PlayerVal\r\n    self.editButton(buttonParameters.PlayerVal)\r\nend\r\n\r\nfunction SayBattle()\r\n  print(\"The game is current set to expedition battle \" .. tostring(BattleVal))\r\nend\r\n\r\nfunction BattleInc()\r\n  if BattleVal < 4 then\r\n    BattleVal = BattleVal+1\r\n  end\r\n\r\n\r\n    -- update the attack 'button' label.\r\n    buttonParameters.BattleVal.label = BattleVal\r\n    if BattleVal > 1 then\r\n      canContinue[3] = false\r\n    end\r\n    self.editButton(buttonParameters.BattleVal)\r\nend\r\n\r\nfunction BattleDec()\r\n  if BattleVal > 1 then\r\n    BattleVal =BattleVal-1\r\n  end\r\n\r\n\r\n    -- update the attack 'button' label.\r\n    buttonParameters.BattleVal.label = BattleVal\r\n    if BattleVal == 1 then\r\n      canContinue[3] = true\r\n    end\r\n    self.editButton(buttonParameters.BattleVal)\r\nend\r\n\r\nfunction variant()\r\n  if (turnVariant == false) then\r\n      turnVariant = true\r\n      self.editButton({\r\n        index = 6,\r\n        label = \"New Age\\nTurn Variant\",\r\n        color = {r = 0, g = 0.2, b = 1}\r\n      })\r\n  else\r\n      turnVariant = false;\r\n      self.editButton({\r\n        index = 6,\r\n        label = \"Classic\\nTurn Variant\",\r\n        color = {r = 0, g = 1, b = 0.2}\r\n      })\r\n  end\r\nend\r\n\r\n\r\nfunction fuckingMythAndFuckingBone() --seriously this has so much specific setup needed, bloody moose mo-fo.\r\n  getObjectFromGUID(mythLife).setLock(true)\r\n  getObjectFromGUID(boneLife).setLock(true)\r\nend\r\n\r\nfunction BuildNemesis(reduce)\r\n  if forceMythBone == true then\r\n    Wait.time(turnOrder,2.4)\r\n    return(nil)\r\n  end\r\n  local Tier1 = findDecksInZone(getObjectFromGUID(tier1Select))\r\n  if (Tier1 ~= nil) then\r\n    Tier1.randomize()\r\n  end\r\n  local Tier2 = findDecksInZone(getObjectFromGUID(tier2Select))\r\n  if (Tier2 ~= nil) then\r\n    Tier2.randomize()\r\n  end\r\n  local Tier3 = findDecksInZone(getObjectFromGUID(tier3Select))\r\n  if (Tier3 ~= nil) then\r\n    Tier3.randomize()\r\n  end\r\n\r\n  if reduce == nil then\r\n    reduce = 0\r\n  end\r\n\r\n  if (canContinue[2] == true) then\r\n    upgrade1 = findDecksInZone(getObjectFromGUID(upgradedScript[1]))\r\n    upgrade2 = findDecksInZone(getObjectFromGUID(upgradedScript[2]))\r\n    upgrade3 = findDecksInZone(getObjectFromGUID(upgradedScript[3]))\r\n\r\n    upgrade1.shuffle()\r\n    upgrade2.shuffle()\r\n    upgrade3.shuffle()\r\n  end\r\n\r\n  local params1 = {position = buildTier1, rotation = {0.00, 180.00, 180.00}}\r\n  local params2 = {position = buildTier2, rotation = {0.00, 180.00, 180.00}}\r\n  local params3 = {position = buildTier3, rotation = {0.00, 180.00, 180.00}}\r\n\r\n-- build tier 1\r\n  local tier1Selection = math.min(nemesis_table[1][PlayerVal] - upgrade_table[1][BattleVal] + reduce, nemesis_table[1][PlayerVal])\r\n  if tier1Selection > 0 then\r\n    for i = 1, tier1Selection,1 do\r\n      Tier1.takeObject(params1)\r\n    end\r\n    for i = 1, upgrade_table[1][BattleVal] - reduce,1 do\r\n      upgrade1.takeObject(params1)\r\n    end\r\n  else\r\n    for i = 1, nemesis_table[1][PlayerVal] - reduce,1 do\r\n      upgrade1.takeObject(params1)\r\n    end\r\n  end\r\n\r\n  -- build tier 2\r\n    local tier2Selection = math.min(nemesis_table[2][PlayerVal] - upgrade_table[2][BattleVal] + reduce, nemesis_table[2][PlayerVal])\r\n    if tier2Selection > 0 then\r\n      for i = 1, tier2Selection,1 do\r\n        Tier2.takeObject(params2)\r\n      end\r\n      for i = 1, upgrade_table[2][BattleVal] - reduce,1 do\r\n        upgrade2.takeObject(params2)\r\n      end\r\n    else\r\n      for i = 1, nemesis_table[2][PlayerVal] - reduce,1 do\r\n        upgrade2.takeObject(params2)\r\n      end\r\n    end\r\n\r\n    -- build tier 3\r\n      local tier3Selection = math.min(nemesis_table[3][PlayerVal] - upgrade_table[3][BattleVal] + reduce, nemesis_table[3][PlayerVal])\r\n      if tier3Selection > 0 then\r\n        for i = 1, tier3Selection,1 do\r\n          Tier3.takeObject(params3)\r\n        end\r\n        for i = 1, upgrade_table[3][BattleVal] - reduce,1 do\r\n          upgrade3.takeObject(params3)\r\n        end\r\n      else\r\n        for i = 1, nemesis_table[3][PlayerVal] - reduce,1 do\r\n          upgrade3.takeObject(params3)\r\n        end\r\n      end\r\n    Wait.time(turnOrder,2.4)\r\n\r\n\r\n\r\nend\r\n\r\nfunction findDecksInZone(zone)\r\n    local objectsInZone = zone.getObjects()\r\n    local decksFound = {}\r\n    for i, object in ipairs(objectsInZone) do\r\n        if object.type == \"Deck\" then\r\n            return getObjectFromGUID(object.guid)\r\n        end\r\n    end\r\n    if #decksFound > 0 then\r\n        return decksFound\r\n    else\r\n        return nil\r\n    end\r\nend\r\n\r\nfunction alreadyPicked()\r\n  printToAll(\"You've already added this.\", {r = 0.8, g = 0.3, b = 0.4})\r\nend\r\n\r\nfunction cannotBalance()\r\n  printToAll(\"This option can no longer be picked.\", {r = 0.8, g = 0.3, b = 0.4})\r\nend\r\n\r\nfunction AeonNem()\r\n\r\n  local myGame = 1\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 7,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction WarNem()\r\n\r\n  local myGame = 2\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 9,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction LegacyNem()\r\n\r\n  local myGame = 3\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 11,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction AgeNem()\r\n\r\n  local myGame = 4\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 12,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction OutcastNem()\r\n\r\n  local myGame = 5\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 8,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction GraveNem()\r\n\r\n  local myGame = 14\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 20,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction DescentNem()\r\n\r\n  local myGame = 17\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 21,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction MinorNem()\r\n\r\n  local myGame = 6\r\n  takeTiers(myGame)\r\n  self.editButton({\r\n    index = 10,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n\r\nend\r\n\r\nfunction AllNem()\r\n\r\n  for j = 0, 7, 1 do\r\n    self.editButton({\r\n      index = 7 + j,\r\n      color = {r = 0, g = 0, b = 0},\r\n      click_function = 'alreadyPicked'\r\n    })\r\n  end\r\n  self.editButton({\r\n    index = 20,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n  self.editButton({\r\n    index = 21,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\n  for i = 1, 6, 1 do\r\n  takeTiers(i)\r\n  end\r\n  takeTiers(17) --the descent\r\nend\r\n\r\nfunction AllNemBalanced(obj,color,alt_click)\r\n    if (alt_click == false) then\r\n        for j = 0, 7, 1 do\r\n            self.editButton(\r\n                {\r\n                    index = 7 + j,\r\n                    color = {r = 0, g = 0, b = 0},\r\n                    click_function = \"alreadyPicked\"\r\n                }\r\n            )\r\n        end\r\n        self.editButton({\r\n          index = 20,\r\n          color = {r = 0, g = 0, b = 0},\r\n          click_function = 'alreadyPicked'\r\n        })\r\n        self.editButton({\r\n          index = 21,\r\n          color = {r = 0, g = 0, b = 0},\r\n          click_function = 'alreadyPicked'\r\n        })\r\n        for i = 7, 9, 1 do --minion, power, attack cards\r\n            takeTiers(i, 999)\r\n        end\r\n        Wait.time(grabBalancedNem, 0.6)\r\n    else\r\n        if (balanceVariant < 4) then\r\n            balanceVariant = balanceVariant + 1\r\n        else\r\n            balanceVariant = 0\r\n        end\r\n        local vers = \"(Balanced)\"\r\n        if (balanceVariant == 1) then\r\n            vers = \"(AE/WE)\"\r\n        elseif (balanceVariant == 2) then\r\n            vers = \"(NA/Outcasts)\"\r\n        elseif (balanceVariant == 3) then\r\n            vers = \"(Legacy)\"\r\n        elseif (balanceVariant == 4) then\r\n            vers = \"(Descent)\"\r\n        end\r\n        self.editButton(\r\n            {\r\n                index = 13,\r\n                label = \"All Games\\n\" .. vers\r\n            }\r\n        )\r\n    end\r\nend\r\n\r\n\r\nfunction grabBalancedNem()\r\n        if (balanceVariant == 0) then\r\n            myOffset = math.random(1, 4)\r\n        else\r\n            myOffset = balanceVariant\r\n        end\r\n        if (myOffset == 2) then\r\n            myOffset = 4\r\n            broadcastToAll(\"Using Aeon's End / War Eternal basic deck construction.\")\r\n        elseif (myOffset == 3) then\r\n            myOffset = 7\r\n            broadcastToAll(\"Using Legacy basic deck construction.\")\r\n        elseif (myOffset == 1) then\r\n            myOffset = 1\r\n            broadcastToAll(\"Using New Age / Outcasts basic deck construction.\")\r\n        elseif (myOffset == 4) then\r\n            broadcastToAll(\"Using Descent basic deck construction.\")\r\n  \t\t\t    takeTiers(17)\r\n  \t\t\t    return\r\n        end\r\n        for h = 1, 3, 1 do\r\n            for i = myOffset, myOffset + 2, 1 do\r\n                numToTake = balancedTiers[i][h]\r\n\r\n                if 1 == 0 then\r\n                    return (nil)\r\n                end\r\n                local myNemDeck = {}\r\n                local n1 = {}\r\n                if i == 1 or i == 4 or i == 7 then\r\n                    myNemDeck = nem_deck1_table\r\n                    n1 = nemTier1\r\n                elseif i == 2 or i == 5 or i == 8 then\r\n                    myNemDeck = nem_deck2_table\r\n                    n1 = nemTier2\r\n                else\r\n                    myNemDeck = nem_deck3_table\r\n                    n1 = nemTier3\r\n                end\r\n\r\n                for g = 1, numToTake, 1 do\r\n                    math.randomseed(os.time())\r\n                    getObjectFromGUID(myNemDeck[6 + h]).shuffle()\r\n                    local param = {position = n1, rotation = {0, 180, 180}}\r\n                    getObjectFromGUID(myNemDeck[6 + h]).takeObject(param)\r\n                end\r\n            end\r\n        end\r\nend\r\n\r\n\r\nfunction NewUpg()\r\n  takeUpgrade(11)\r\nend\r\n\r\nfunction OutUpg()\r\n  takeUpgrade(12)\r\nend\r\n\r\nfunction LegUpg()\r\n  takeUpgrade(13)\r\nend\r\n\r\nfunction GraveUpg()\r\n  takeUpgrade(15)\r\nend\r\n\r\nfunction FutureUpg()\r\n  takeUpgrade(16)\r\nend\r\n\r\nfunction DescentUpg()\r\n  takeUpgrade(18)\r\nend\r\n\r\n\r\nfunction AllUpg()\r\n  takeUpgrade(10)\r\nend\r\n\r\nfunction canCont()\r\n    canContinue[1] = true\r\nend\r\n\r\nfunction canCont2()\r\n    canContinue[2] = true\r\nend\r\n\r\nfunction takeTiers(myGame,alternative_pos)\r\n  local n1 = alternative_pos or nemTier1\r\n  local n2 = alternative_pos or nemTier2\r\n  local n3 = alternative_pos or nemTier3\r\n\r\n  if (n1 == 999) then\r\n    if (myGame == 7) then\r\n      n1 = balance_vector[1]\r\n      n2 = balance_vector[4]\r\n      n3 = balance_vector[7]\r\n    end\r\n    if (myGame == 8) then\r\n      n1 = balance_vector[2]\r\n      n2 = balance_vector[5]\r\n      n3 = balance_vector[8]\r\n    end\r\n    if (myGame == 9) then\r\n      n1 = balance_vector[3]\r\n      n2 = balance_vector[6]\r\n      n3 = balance_vector[9]\r\n    end\r\n  end\r\n  takeObjectSafe(getObjectFromGUID(deck_id[1]) ,{guid = nem_deck1_table[myGame] , position = n1, rotation = {0.00, 180.00, 180.00}, smooth = false},false)\r\n\r\n  takeObjectSafe(getObjectFromGUID(deck_id[2]) ,{guid = nem_deck2_table[myGame] , position = n2, rotation = {0.00, 180.00, 180.00}, smooth = false},false)\r\n\r\n  takeObjectSafe(getObjectFromGUID(deck_id[3]) ,{guid = nem_deck3_table[myGame] , position = n3, rotation = {0.00, 180.00, 180.00}, smooth = false},false)\r\n  local myFrames = 1\r\n  if (n1 == nemTier1) then\r\n    myFrames = 2\r\n  end\r\n  Wait.time(canCont,myFrames)\r\n\r\n\r\n    self.editButton({\r\n      index = 13,\r\n      color = {r = 0, g = 0, b = 0},\r\n      click_function = 'cannotBalance'\r\n    })\r\n    self.editButton({\r\n      index = 14,\r\n      color = {r = 0, g = 0, b = 0},\r\n      click_function = 'cannotBalance'\r\n    })\r\nend\r\n\r\nfunction takeUpgrade(myGame)\r\n\r\n\r\n  takeObjectSafe(getObjectFromGUID(deck_id[1]) ,{guid = nem_deck1_table[myGame] , position = getObjectFromGUID(upgradedScript[1]).getPosition(), rotation = {0.00, 180.00, 180.00}},false)\r\n\r\n  takeObjectSafe(getObjectFromGUID(deck_id[2]) ,{guid = nem_deck2_table[myGame] , position = getObjectFromGUID(upgradedScript[2]).getPosition(), rotation = {0.00, 180.00, 180.00}},false)\r\n\r\n  takeObjectSafe(getObjectFromGUID(deck_id[3]) ,{guid = nem_deck3_table[myGame] , position = getObjectFromGUID(upgradedScript[3]).getPosition(), rotation = {0.00, 180.00, 180.00}},false)\r\n  Wait.time(canCont2,0.8)\r\n\r\n\r\n  for i = 15, 19, 1 do\r\n    self.editButton({\r\n      index = i,\r\n      color = {r = 0, g = 0, b = 0},\r\n      click_function = 'alreadyPicked'\r\n    })\r\n  end\r\n  self.editButton({\r\n    index = 22,\r\n    color = {r = 0, g = 0, b = 0},\r\n    click_function = 'alreadyPicked'\r\n  })\r\nend\r\n\r\n--perform takeObject only if the object exists in the container\r\nfunction takeObjectSafe(container, params, error)\r\n    if params.guid ~= nil then\r\n        for _, item in pairs(container.getObjects()) do\r\n            if item.guid == params.guid then\r\n                return container.takeObject(params)\r\n            end\r\n        end\r\n    else\r\n        return container.takeObject(params)\r\n    end\r\n    local playError = error or true\r\n    if (playError == true) then\r\n      print(\"Warning: Object \" .. params.guid .. \" not found in container.\")\r\n    end\r\nend\r\n\r\nfunction onObjectEnterScriptingZone(zone, info)\r\n  if marketDone == false and info.getName() == \"Burrower (Diff: 8) (SETUP AFTER THE SHOP)\" and zone.getGUID() == \"5b5b88\" then\r\n    broadcastToAll(\"Before setting up this nemesis, you should set up and lock market at first!\",{r = 1, g = 0, b = 0})\r\n    return\r\n  end\r\n  if (killSwitch == true) then\r\n    return(nil)\r\n  end\r\n    if (zone.getGUID() == zone_GUID and ((info.getDescription() == \"Nemesis\" and info.type == \"Bag\") or\r\n    ((info.getGMNotes() == \"NemesisRandomizer1\" or info.getGMNotes() == \"NemesisRandomizer2\" or\r\n    info.getGMNotes() == \"NemesisRandomizer3\" or info.getGMNotes() == \"NemesisRandomizer4\")\r\n    and info.type == \"Card\"))) then\r\n    if (info.getName() == \"Paradox of Myth and Bone (DOES NOT REQUIRE BASICS) (Diff: 5)\") then\r\n      canContinue[1] = true;\r\n      canContinue[2] = true;\r\n      canContinue[3] = true;\r\n    else\r\n        if canContinue[1] == false or (canContinue[2] == false and canContinue[3] == false) then\r\n            local mess = \"Basic and Upgraded Basics Nemesis\"\r\n            if canContinue[1] == true and (canContinue[2] == false and canContinue[3] == false) then\r\n              mess = \"Upgraded Basics Nemesis\"\r\n            elseif canContinue[1] == false and (canContinue[2] == true or canContinue[3] == true) then\r\n              mess = \"Basic Nemesis\"\r\n            end\r\n            broadcastToAll(\"Select \" .. mess .. \" cards and then place this bag here again\", {r = 1, g = 0.2, b = 0.2})\r\n            return (nil)\r\n        end\r\n      end\r\n        --print(info.getGUID())\r\n        obj_GUID = info.getGUID()\r\n        local bagName = info.getName()\r\n        local reduceBy = 0\r\n        local takeTurn = nil\r\n        -- print(tostring(info) .. \" collided with \" .. tostring(self))\r\n        obj_GUID = getObjectFromGUID(info.guid)\r\n        if (info.getDescription() == \"Nemesis\" and info.type == \"Bag\" and zone.getGUID() == zone_GUID) then\r\n            -- print(\"Is a bag\")\r\n\r\n            --print(zone.getGUID())\r\n            bagNum = info.getQuantity()\r\n            --print(tostring(bagNum))\r\n            pullItems(info, bagNum)\r\n            if bagName == \"Xaxos: Ascended [Final Legacy Nemesis] (Diff: 9)\" then\r\n                reduceBy = 3\r\n            elseif bagName == \"Maelstrom: Risen (Diff: 8)\" then\r\n                reduceBy = 2\r\n                turnOrderCard = \"b6f3d6\"\r\n            elseif bagName == \"Thief of Dreams (Diff: 4)\" then\r\n                turnOrderCard = \"d34108\"\r\n            elseif bagName == \"Paradox of Myth and Bone (DOES NOT REQUIRE BASICS) (Diff: 5)\" then\r\n              turnOrderCard = \"7d16b6\"\r\n              turnOrderCardAlt = \"df613f\"\r\n              forceMythBone = true\r\n            end\r\n\r\n\r\n            BuildNemesis(reduceBy)\r\n      end\r\n\r\n      if (info.type == 'Card') then\r\n        broadcastToAll(\"Preparing Nemesis Deck\", {r=1, g=1, b=0})\r\n      else\r\n        if (bagName ~= \"Paradox of Myth and Bone (DOES NOT REQUIRE BASICS) (Diff: 5)\") then\r\n              Wait.time(moveTier3, 6)\r\n              Wait.time(moveTier2, 8)\r\n              Wait.time(moveTier1, 10)\r\n\r\n\r\n        \t\t\tWait.time(nemWarning, 2.0)\r\n              Wait.time(setupDone,11)\r\n              if (info.type == 'Bag') then\r\n                killSwitch = true\r\n              end\r\n        else\r\n          broadcastToAll(\"Preparing Nemesis Deck\", {r=1, g=1, b=0})\r\n\r\n          Wait.time(nemWarning, 2.0)\r\n          Wait.time(nemWarning, 5.5)\r\n          Wait.time(setupDone,11)\r\n        end\r\n      end\r\n        -- print(\"Is not a bag\")\r\n\r\n        if ((info.getGMNotes() == \"NemesisRandomizer1\" or info.getGMNotes() == \"NemesisRandomizer2\" or\r\n        info.getGMNotes() == \"NemesisRandomizer3\" or info.getGMNotes() == \"NemesisRandomizer4\")\r\n        and info.type == \"Card\") then\r\n          print(info.getGMNotes())\r\n          getNemesisBag(info.getGMNotes(),info)\r\n        end\r\n    end\r\nend\r\n\r\nfunction setupDone()\r\n\r\n  -- Iterate through each contained object\r\n  storeND = findDecksInZone(getObjectFromGUID('71a6e1'))\r\n\r\n\r\n  broadcastToAll('Nemesis constructed.',{r=1,g=1,b=0})\r\n  getObjectFromGUID('b9111a').setVar('nemesisDone',true)\r\nend\r\n\r\nfunction nemWarning()\r\n\tbroadcastToAll(\"Do not interact with Nemesis Deck until its constructed.\",{r=1, g=0, b=0})\r\nend\r\n\r\nfunction getNemesisBag(currentTier,card)\r\n  print(nemesisBagDeck[currentTier] .. \" / \" .. card.getName())\r\n  searchDeck(getObjectFromGUID(nemesisBagDeck[currentTier]),card.getName(),vector(-55.42, -0.35, 25.04),{0,180,0},'Name','Nemesis Bag does not exist in box.')\r\n  local myPos2 = getObjectFromGUID('d089df').getPosition()\r\n  card.setPositionSmooth(myPos2 + vector(0,8,0))\r\nend\r\n\r\nfunction killLifeTracker()\r\n  destroyObject(getObjectFromGUID(lifeTrackerKill))\r\nend\r\n\r\nfunction moveTier1()\r\n  print(\"Adding Tier 1\")\r\n  local TierDeck = findDecksInZone(getObjectFromGUID(tier1Zone))\r\n  if (TierDeck ~= nil) then\r\n    TierDeck.randomize()\r\n    mainPos = getObjectFromGUID(boardGUID).getPosition()\r\n    TierDeck.setPositionSmooth(mainPos + nemesisDeck + vector(0,3.5,0),false,true)\r\n  end\r\nend\r\n\r\nfunction moveTier2()\r\nprint(\"Adding Tier 2\")\r\nlocal TierDeck = findDecksInZone(getObjectFromGUID(tier2Zone))\r\nif (TierDeck ~= nil) then\r\n  TierDeck.randomize()\r\n  mainPos = getObjectFromGUID(boardGUID).getPosition()\r\n  TierDeck.setPositionSmooth(mainPos + nemesisDeck + vector(0,2,0),false,trues)\r\nend\r\nend\r\n\r\nfunction moveTier3()\r\n\tprint(\"Adding Tier 3\")\r\n\tlocal TierDeck = findDecksInZone(getObjectFromGUID(tier3Zone))\r\n\t  if (TierDeck ~= nil) then\r\n\t\tTierDeck.randomize()\r\n\t\tmainPos = getObjectFromGUID(boardGUID).getPosition()\r\n\t\tTierDeck.setPositionSmooth(mainPos + nemesisDeck,false,trues)\r\n\t\tTierDeck.setName(\"Nemesis Deck\")\r\n    --storeND = TierDeck\r\n\t\tWait.time(moveTier3a, 1.2)\r\n\t  end\r\nend\r\n\r\nfunction moveTier3a()\r\n\tlocal TierDeck = findDecksInZone(getObjectFromGUID(tier3Zone))\r\n\t  if (TierDeck ~= nil) then\r\n\t\tTierDeck.randomize()\r\n\t\tmainPos = getObjectFromGUID(boardGUID).getPosition()\r\n\t\tTierDeck.setPositionSmooth(mainPos + nemesisDeck)\r\n\r\n\t\tTierDeck.setName(\"Nemesis Deck\")\r\n\t  end\r\nend\r\n\r\nfunction pullItems(obj,num)\r\n  local params = {}\r\n  mainPos = getObjectFromGUID(boardGUID).getPosition()\r\n  subPos = getObjectFromGUID(subboardGUID).getPosition()\r\n\r\n  params = {\r\n    position = mainPos + vector(0,5,0),\r\n    smooth = false,\r\n    callback_function = function(obj) takeCallback(obj) end\r\n    }\r\n\r\n  for j = 1, num do\r\n      obj.takeObject(params)\r\n  end\r\n\r\n  destroyObject(obj)\r\nend\r\n\r\nfunction xaxosMove(deck)\r\n  local xParam = {position = subPos + vector(-5.67, 5,-2.88), rotation = {0.00, 180.00, 180.00}}\r\n  local xParamA = {position = subPos + vector(5.67, 24,-2.88), rotation = {0.00, 180.00, 180.00}}\r\n  for i = 1, 6, 1 do\r\n    if i <= 5 then\r\n      deck.takeObject(xParam)\r\n    else\r\n      deck.takeObject(xParamA)\r\n    end\r\n  end\r\nend\r\n\r\nfunction lockMinorBoard()\r\n  minorBoardStore.setLock(true)\r\nend\r\n\r\nfunction lockMainBoard()\r\n  mainBoardStore.setLock(true)\r\nend\r\n\r\n\r\n\r\nfunction turnOrder()\r\n  if (PlayerVal < 3) or (turnVariant == false) then\r\n    turnV = getObjectFromGUID(turn_table[PlayerVal])\r\n    local oldPos = turnV.getPosition()\r\n    local newPos = getObjectFromGUID(turnDeck).getPosition()\r\n    turnV.setPosition(newPos + vector(0,2,0))\r\n    turnV.setRotation({0,180,180})\r\n    Wait.time(function()\r\n      zone = getObjectFromGUID('d3724a')\r\n      turn_order_deck = findDecksInZone(zone)\r\n      if turn_order_deck ~= nil then\r\n        Wait.time(function()\r\n        turn_order_deck.shuffle()\r\n      end,1.5)\r\n      end\r\n    end,0.5)\r\n  end\r\n  if (PlayerVal == 3) and (turnVariant == true) then\r\n    turnV = getObjectFromGUID(turn_table[8])\r\n    local oldPos = turnV.getPosition()\r\n    local newPos = getObjectFromGUID(turnDeck).getPosition()\r\n    turnV.setPosition(newPos + vector(0,2,0))\r\n    turnV.setRotation({0,180,180})\r\n    Wait.time(function()\r\n      zone = getObjectFromGUID('d3724a')\r\n      turn_order_deck = findDecksInZone(zone)\r\n      if turn_order_deck ~= nil then\r\n        Wait.time(function()\r\n        turn_order_deck.shuffle()\r\n      end,1.5)\r\n      end\r\n    end,0.5)\r\n    local myTok = getObjectFromGUID(turn_table[9])\r\n    myTok.setPositionSmooth(vector(0,3,-17.92))\r\n    myTok.setRotationSmooth({0,180,0})\r\n    myTok.setScale({0.85,1,0.85})\r\n    local meT = getObjectFromGUID('88a2c3')\r\n    meT.setVar('threePlayer',true)\r\n  end\r\n  if (PlayerVal == 4) and (turnVariant == true) then\r\n    turnV = getObjectFromGUID(turn_table[5])\r\n    local oldPos = turnV.getPosition()\r\n    local newPos = getObjectFromGUID(turnDeck).getPosition()\r\n    turnV.setPosition(newPos + vector(0,2,0))\r\n    turnV.setRotation({0,180,180})\r\n    Wait.time(function()\r\n      zone = getObjectFromGUID('d3724a')\r\n      turn_order_deck = findDecksInZone(zone)\r\n      if turn_order_deck ~= nil then\r\n        Wait.time(function()\r\n        turn_order_deck.shuffle()\r\n      end,1.5)\r\n      end\r\n    end,0.5)\r\n    local myTok = getObjectFromGUID(turn_table[6])\r\n    myTok.setPositionSmooth({2.04, 3.78, -17.92})\r\n    myTok.setRotationSmooth({0,180,0})\r\n    myTok.setScale({0.75,1,0.75})\r\n    local myTok2 = getObjectFromGUID(turn_table[7])\r\n    myTok2.setPositionSmooth({-2.04, 3.78, -17.92})\r\n    myTok2.setRotationSmooth({0,180,0})\r\n    myTok2.setScale({0.75,1,0.75})\r\n    local meT = getObjectFromGUID('88a2c3')\r\n    meT.setVar('fourPlayer',true)\r\n  end\r\n  Wait.time(moveTurnBossCard,2)\r\n\r\nend\r\n\r\nfunction moveTurnBossCard()\r\n  if (turnOrderCard ~= nil) then\r\n    findDeck = findDecksInZone(getObjectFromGUID(turnDeck))\r\n    local setNem = searchDeck(findDeck,'nem1',vector(22.61, 3, 4.58),{0,180,0},\"Des\",\"Cannot find Nemesis turn order card.\")\r\n    getObjectFromGUID(turnOrderCard).putObject(findDeck)\r\n    setNem.addTag('setup')\r\n    findDeck.shuffle()\r\n  end\r\n  if (turnOrderCardAlt ~= nil) then\r\n    findDeck = findDecksInZone(getObjectFromGUID(turnDeck))\r\n    local setNem2 = searchDeck(findDeck,'nem2',vector(22.61, 3, 4.58),{0,180,0},\"Des\",\"Cannot find Nemesis turn order card.\")\r\n    getObjectFromGUID(turnOrderCardAlt).putObject(findDeck)\r\n    setNem2.addTag('setup')\r\n    findDeck.shuffle()\r\n  end\r\nend\r\n\r\nfunction searchDeck(deck, charName,pos,rot,nameOrDes,error)\r\n\r\n    for _, card in pairs(deck.getObjects()) do\r\n      if (nameOrDes == \"Des\" and card.description == charName) or (nameOrDes == \"Name\" and card.name == charName) then\r\n        return(deck.takeObject({guid = card.guid, position = pos, rotation = rot}))\r\n      end\r\n    end\r\n    local myError = error or ''\r\n    if (myError ~= '') then\r\n      broadcastToAll(error,{r = 1, g = 0, b = 0})\r\n    end\r\nend\r\n\r\nfunction takeCallback(obj_spawned)\r\n  local myDes = obj_spawned.getDescription()\r\n  local myName = obj_spawned.getName()\r\n  local myGMS = obj_spawned.getGMNotes()\r\n  mainPos = getObjectFromGUID(boardGUID).getPosition()\r\n  subPos = getObjectFromGUID(subboardGUID).getPosition()\r\n\r\n  --print(\"Spawning \" .. tostring(myDes) .. \" \" .. tostring(myName))\r\n      if (myDes == \"T1\" or myName ==\"Mist 1\") then\r\n        obj_spawned.setPositionSmooth(buildTier1)\r\n        obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n    end\r\n    if (myDes == \"T2\") then\r\n      obj_spawned.setPositionSmooth(buildTier2)\r\n      obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  end\r\n  if (myDes == \"T3\") then\r\n    obj_spawned.setPositionSmooth(buildTier3)\r\n    obj_spawned.setRotation({0.00, 180.00, 180.00})\r\nend\r\n-- mist revealed setup --\r\nif (myDes == \"T4\") then\r\n  obj_spawned.setPositionSmooth(buildTier3)\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n\r\n  local i = 1\r\n  for i = 1, 7, 1 do\r\n    local m3 = {position = vector(22.61, 2.42 + i, 4.58), rotation = {0,180,180},\r\n    smooth = true}\r\n    obj_spawned.takeObject(m3)\r\n  end\r\n\r\nend\r\nif (myDes == \"Minor Deck\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myGMS == \"MinorHP\") then\r\n  obj_spawned.setPositionSmooth((mainPos + subDeck) + vector(-4.5,4,0))\r\n  --print(obj_spawned.getName())\r\n  --obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n--paradox of myth and bone\r\nif (myName == \"Myth Nemesis Board\") then\r\n  obj_spawned.setPosition(mythBoard)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  obj_spawned.setLock(true)\r\n\r\n  local subMe = getObjectFromGUID(subboardGUID)\r\n  subMe.setPosition(subMe.getPosition() + vector(-3,-5,0))\r\nend\r\n\r\nif (myName == \"Myth 1\" or myName == \"Myth 2\" or myName == \"Myth 3\") then\r\n  if (myDes == \"T1\" or myDes == \"T2\" or myDes == \"T3\") then\r\n    return(nil)\r\n  end\r\n  local myOff = 9\r\n  local take = 0\r\n  if (myName == \"Myth 1\") then\r\n    myOff = 15\r\n\r\n    if (PlayerVal == 1) then take = 3 end\r\n    if (PlayerVal == 2) then take = 2 end\r\n    if (PlayerVal == 3) then take = 1 end\r\n  end\r\n  if (myName == \"Myth 2\") then\r\n    myOff = 12\r\n    if (PlayerVal == 1) then take = 2 end\r\n    if (PlayerVal == 2) then take = 1 end\r\n  end\r\n  obj_spawned.setPositionSmooth(mythBoard + vector(-17.45,myOff,7.73))\r\n  obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  obj_spawned.shuffle()\r\nobj_spawned.setName(\"Myth Deck\")\r\n  for i = 1, take, 1 do\r\n    local m3 = {position = vector(22.61, 2.42 + i, 4.58), rotation = {0,180,180},\r\n    smooth = true}\r\n    obj_spawned.takeObject(m3)\r\n  end\r\nend\r\n\r\nif (myName == \"Bone Life\") then\r\n  obj_spawned.setPositionSmooth(vector(13.65, 4.77, 32.44))\r\n  obj_spawned.setRotation({0.00, 180.00, 00})\r\n  boneLife = obj_spawned.getGUID()\r\n  if (PlayerVal <= 2) then\r\n    obj_spawned.setDescription(50)\r\n    obj_spawned.call('customSet')\r\n    print(\"Nemesis life set.\")\r\n  end\r\nend\r\n\r\nif (myName == \"Myth Life\") then\r\n  obj_spawned.setPositionSmooth(vector(-49.49, 4.77, 10.71))\r\n  obj_spawned.setRotation({0.00, 180.00, 00})\r\n  mythLife = obj_spawned.getGUID()\r\n  if (PlayerVal <= 2) then\r\n    obj_spawned.setDescription(50)\r\n    obj_spawned.call('customSet')\r\n  end\r\n  Wait.time(fuckingMythAndFuckingBone,4)\r\nend\r\n\r\nif (myName == \"Bone 1\" or myName == \"Bone 2\" or myName == \"Bone 3\") then\r\n  if (myDes == \"T1\" or myDes == \"T2\" or myDes == \"T3\") then\r\n    return(nil)\r\n  end\r\n  local myOff = 9\r\n  local take = 0\r\n  if (myName == \"Bone 2\") then\r\n    myOff = 12\r\n    if (PlayerVal == 1) then take = 2 end\r\n    if (PlayerVal == 2) then take = 1 end\r\n  end\r\n  if (myName == \"Bone 1\") then\r\n    myOff = 15\r\n    if (PlayerVal == 1) then take = 3 end\r\n    if (PlayerVal == 2) then take = 2 end\r\n    if (PlayerVal == 3) then take = 1 end\r\n  end\r\n  obj_spawned.setPositionSmooth(mainPos + nemesisDeck + vector(0,myOff,0))\r\n  obj_spawned.setName(\"Bone Deck\")\r\n  obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  obj_spawned.shuffle()\r\n\r\n    for i = 1, take, 1 do\r\n    local m3 = {position = vector(22.61, 2.42 + i, 4.58), rotation = {0,180,180},\r\n    smooth = true}\r\n    obj_spawned.takeObject(m3)\r\n    obj_spawned.addTag(nemesisDeckCard)\r\n  end\r\nend\r\n\r\nif (myName == \"Nemesis Life Scripting\") then\r\n  local nemobj = getObjectFromGUID(nemesisLifeObject)\r\n  nemobj.setDescription(obj_spawned.getDescription())\r\n  nemobj.call('customSet')\r\n  print(\"Nemesis life set to \" .. obj_spawned.getDescription())\r\n  lifeTrackerKill = obj_spawned.getGUID()\r\n  Wait.time(killLifeTracker, 1)\r\nend\r\n\r\nif (myDes == \"Minor Deck Shuffled\" or myDes == \"Minor Deck Shuffle\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n\r\n  if (myName ~= \"Parasite Deck\") then\r\n    obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  else\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  end\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\nif (myDes == \"Minor Deck No Flip\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\nif (myName == \"[A020F0]Void Tokens[-]\") then\r\n  obj_spawned.setPosition(vector(-0,8,-30.46))\r\n  obj_spawned.setRotation({0.00, 0.00, 0.00})\r\n  obj_spawned.setScale({x=2,y=2,z=2})\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\n    if (myDes == \"Bag 1\") then\r\n      obj_spawned.setPositionSmooth(mainPos + vector(20,6,-5))\r\n      obj_spawned.setRotation({0.00, 0.00, 0.00})\r\n      obj_spawned.setDescription('')\r\n    end\r\n    if (myDes == \"Bag 2\") then\r\n      obj_spawned.setPositionSmooth(mainPos + vector(24,6,-5))\r\n      obj_spawned.setRotation({0.00, 0.00, 0.00})\r\n      obj_spawned.setDescription('')\r\n    end\r\n    if (myDes == \"Bag 3\") then\r\n      obj_spawned.setPositionSmooth(mainPos + vector(28,6,-5))\r\n      obj_spawned.setRotation({0.00, 0.00, 0.00})\r\n      obj_spawned.setDescription('')\r\n    end\r\n    if (myDes == \"Bag 4\") then\r\n      obj_spawned.setPositionSmooth(mainPos + vector(32,6,-5))\r\n      obj_spawned.setRotation({0.00, 0.00, 0.00})\r\n      obj_spawned.setDescription('')\r\n    end\r\nif (myDes == \"Main Board\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-3.2,5,6.37))\r\n  obj_spawned.setRotation({0.00, 180.00,0})\r\n  mainBoardStore = obj_spawned\r\n  Wait.time(lockMainBoard, 3)\r\n  local counter = getObjectFromGUID(\"a55a93\")\r\n  if myName == \"The Wrath (Diff: 8)\" then\r\n    counter.call('setValue',1)\r\n  end\r\n  if myName == \"Stonemonger\" and PlayerVal < 4 then\r\n    counter.call('setValue',1)\r\n  end\r\n  if (myName == \"Magus of Cloaks\") or (myName == \"Gate Witch\") or (myName == \"Umbra Titan\") or (myName == \"The Wailing\")\r\n  or (((myName == \"Herald of the End\") or (myName == \"Fenrix\")) and PlayerVal ~= 4) or ((myName == \"Corruption's Core\") and PlayerVal < 3) then\r\n    local magus = getObjectFromGUID(nemesisTokensGUID)\r\n    local nm = 4\r\n    if (myName == \"Gate Witch\" or myName == \"The Wailing\") then\r\n      nm = 1\r\n    end\r\n    if (myName == \"Umbra Titan\") then\r\n      nm = 8\r\n      counter.call('setValue',8)\r\n    end\r\n    if (myName == \"Fenrix\") then\r\n      nm = 1\r\n      if (PlayerVal < 3) then\r\n        nm = 2\r\n      end\r\n    end\r\n    if (myName == \"Corruption's Core\") then\r\n      nm = 2\r\n    end\r\n    if (myName == \"Herald of the End\") then\r\n      nm = 2\r\n      counter.call('setValue',2)\r\n      if (PlayerVal == 3) then\r\n        nm = 1\r\n        counter.call('setValue',1)\r\n      end\r\n    end\r\n    for i = 1, nm, 1 do\r\n      local add = 2.04 * i\r\n      local magusParams = {\r\n      position = mainPos + vector(-12.24 + add,6,18.13),\r\n      rotation = {0, 180, 0}}\r\n      magus.takeObject(magusParams)\r\n    end\r\n  end\r\nend\r\nif (myDes == \"Sub Board\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,2.5,0),false,true)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  if (myName == \"Tainted Track\") then\r\n      obj_spawned.setRotation({0.00, 180.00, 180})\r\n  end\r\n  minorBoardStore = obj_spawned\r\n  Wait.time(lockMinorBoard,4)\r\nend\r\nif (myDes == \"SubBag1\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-6.03,8,8.54))\r\n  obj_spawned.setRotation({0, 0, 0})\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\nif (myName == \"[0EEE27]Globule Tokens[-]\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(6.53,8,5.54))\r\n  obj_spawned.setRotation({0, 0, 0})\r\n  --obj_spawned.setDescription('')\r\nend\r\n\r\n--starting nemesis cards--\r\n--position 1\r\nif (myName == \"Breeding Chamber\") or (myName == \"Thief of Dreams Additional Setup\") or (myDes == \"Setup Reminder\")  or (myDes == \"Reminder Card\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-17.19,6,-12.31))\r\n  obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n  if (myDes == \"Setup Reminder\" or myDes == \"Reminder Card\") then\r\n    obj_spawned.setDescription('')\r\n  end\r\nend\r\n--position 2--\r\nif (myName == \"Thief of Dreams Delirium Turn\" or myName == \"Bone Nemesis Turn\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-10.69,6,-12.31))\r\n  obj_spawned.setRotation({0.00, 180.00, 0.00})\r\nend\r\n\r\n--position 3--\r\nif (myName == \"Maelstrom Assault Turn\" or myName == \"Myth Nemesis Turn\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-4.19,6,-12.31))\r\n  obj_spawned.setRotation({0.00, 180.00, 0.00})\r\nend\r\n\r\n--rageborne --\r\nif (myName == \"Fury Token\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-10.2,6,18.13))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n-- blazing kor --\r\nif (myName == \"Voracious Ember Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-4,6,-9.02))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Blazing Ember Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0.2,6,-9.02))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Ember Lord Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(4,6,-9.02))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Ignition Randomiser Dice\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,14,0))\r\n  obj_spawned.setName(\"Ignition Dice\")\r\nend\r\n\r\nif (myName == \"1st Player Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.36,8,1.17))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"2nd Player Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(3.36,8,-1.17))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"3rd Player Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-1.17,8,-3.36))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"4th Player Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(1.17,8,3.36))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Ember Tokens\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,6,9.02))\r\n  obj_spawned.setRotation({0, 0, 0})\r\n  local offsetEmb = {\r\n  [1] = vector(-5.67,9,5.67),\r\n  [2] = vector(5.67,9,5.67),\r\n  [3] = vector(5.67,9,-5.67),\r\n  [4] = vector(-5.67,9,-5.67)\r\n  }\r\n  local posX = math.random(1,4)\r\n  print(\"Spawning Embers at \" .. tostring(posX))\r\n  local emberParam = {position = subPos + offsetEmb[posX], rotation ={0.00, 0, 0.00}}\r\n  for i = 1, 2, 1 do\r\n    obj_spawned.takeObject(emberParam)\r\n  end\r\nend\r\n\r\nif (myName == \"Burning Kor Player Reminders\") then\r\n  for i = 1, 4, 1 do\r\n    local playPos = getObjectFromGUID(playerBoardGUID[i]).getPosition()\r\n    local curseParm = {position = playPos + vector(8,3,-3.4), rotation ={0.00, 180.00, 0.00}}\r\n    obj_spawned.takeObject(curseParm)\r\n  end\r\nend\r\n--stonemonger\r\nif (myDes == \"Corrupted Opal\") or (myDes == \"Poisoned Peridot\") or (myDes == \"Draining Diamond\") then\r\n  if (myDes == \"Corrupted Opal\") then\r\n    obj_spawned.setPositionSmooth(mainPos + vector(-10.69,6,-12.31))\r\n    obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n  end\r\n    if (myDes == \"Poisoned Peridot\") then\r\n      obj_spawned.setPositionSmooth(mainPos + vector(-4.2,6,-12.31))\r\n      obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n  end\r\n  if (myDes == \"Draining Diamond\") then\r\n    obj_spawned.setPositionSmooth(mainPos + vector(2.31,6,-12.31))\r\n    obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n  end\r\nend\r\n--infested mutation--\r\nif (myName == \"Glob 1\") then\r\n  obj_spawned.setName(\"[0EEE27]Globule Minion[-]\")\r\n  if (myDes == \"V1\") then\r\n    obj_spawned.setPositionSmooth(vector(-34.27, 15.09, 14.34))\r\n\r\nelseif (myDes == \"V2\") then\r\n    obj_spawned.setPositionSmooth(vector(-31.79, 15.09, 14.34))\r\n\r\nelseif (myDes == \"V3\") then\r\n    obj_spawned.setPositionSmooth(vector(-31.92, 15.09, 12.25))\r\nelse\r\n    obj_spawned.setPositionSmooth(vector(-34.57, 5.09, 12.26))\r\n  end\r\n\r\n  obj_spawned.setDescription(\"\")\r\n\r\nend\r\n\r\nif (myName == \"Glob 2\") then\r\n  if (PlayerVal <= 2) then\r\n    obj_spawned.destruct()\r\n  else\r\n  obj_spawned.setName(\"[0EEE27]Globule Minion[-]\")\r\n  if (myDes == \"V5\") then\r\n    obj_spawned.setPositionSmooth(vector(-34.13, 15.09, 10.32))\r\n  end\r\n  if (myDes == \"V6\") then\r\n    obj_spawned.setPositionSmooth(vector(-31.63, 15.09, 10.22))\r\n  end\r\n  obj_spawned.setDescription(\"\")\r\n  end\r\nend\r\n\r\n--necroswrm--\r\nif (myName == \"Bramble Tokens\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,6,9.02))\r\n  obj_spawned.setRotation({0, 0, 0})\r\n  local brambleParam = {position = subPos + vector(-8.06,8,-0.21), rotation ={0.00, 180.00, 0.00}}\r\n  obj_spawned.takeObject(brambleParam)\r\n\r\nend\r\n\r\n--hordecrone--\r\nif (myName == \"Yud Reminder Token\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-7.2,6,18.13))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Zom Reminder Token\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-3.2,6,18.13))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Orp Reminder Token\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(1.2,6,18.13))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n--maiden of thorns --\r\nif (myName == \"Thorn Token\") then\r\n  if (myDes == \"Tier 1\") then\r\n    obj_spawned.setPositionSmooth(subPos + vector(0,8,-2))\r\n  elseif (myDes == \"Tier 2\") then\r\n    obj_spawned.setPositionSmooth(subPos + vector(-4.68,8,2.16))\r\n  elseif (myDes == \"Tier 3\") then\r\n    obj_spawned.setPositionSmooth(subPos + vector(4.83,8,2.06))\r\n  end\r\n  obj_spawned.setRotation({0.00, 0.00, 180.00})\r\nend\r\n\r\n--maelstrom--\r\n\r\n\r\n--hollow crown / horde crone / maelstrom / bishop of scrolls / mother of rust\r\nif (myName == \"Acolyte Deck\" or myName == \"Trogg Deck\" or myName == \"Beacon Deck\" or myName == \"Rustborn Deck\" or myName == \"Unnamed Deck\" or myName == \"Villager Deck\" or myName == \"Hydra Deck\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setDescription('')\r\n  local ac1 = {position = mainPos + vector(-17.19,6,-12.31), rotation = {0,180,0},\r\n  smooth = true}\r\n  local ac2 = {position = mainPos + vector(-10.69,6,-12.31), rotation = {0,180,0},\r\n  smooth = true}\r\n  local ac3 = {position = mainPos + vector(-4.19,6,-12.31), rotation = {0,180,0},\r\n  smooth = true}\r\n  obj_spawned.takeObject(ac1)\r\n\tif (myName ~= \"Trogg Deck\" and myName ~= \"Hydra Deck\" and myName ~= \"Rustborn Deck\") then\r\n\t\tobj_spawned.takeObject(ac2)\r\n\tend\r\n  if (myName == \"Unnamed Deck\" and PlayerVal <= 3) then\r\n    obj_spawned.takeObject(ac3)\r\n  end\r\nend\r\n\r\n-- bishop of scrolls --\r\nif (myName == \"Bishop of Scrolls Comparsion\") then\r\n  obj_spawned.setPositionSmooth({22.61, 2.42, 4.58})\r\nend\r\n\r\n-- paradox of myth --\r\nif (myName == \"Myth Unleash Token\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-7.05,15,7.85))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n-- griefweaver\r\nif (myName == \"Griefweaver Setup Reminder Board\") then\r\n  obj_spawned.setScale({4.20,0,4.20})\r\n  obj_spawned.setDescription(\"Griefweaver requires a specific shop setup in order to function, this will have to be done somewhat manually.\")\r\nend\r\n\r\n--wraithmonger--\r\nif (myName == \"Terror Level Token\") then\r\n  local ref = -2.84\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,6,-8.38 - (ref * (tonumber(myDes) - 1))))\r\n  obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n  obj_spawned.setName(\"Terror Level \" .. myDes .. \" Token\")\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\n--ageless walker--\r\nif (myName == \"Curse of Aging\") then\r\n  for i = 1, 4, 1 do\r\n    local playPos = getObjectFromGUID(playerBoardGUID[i]).getPosition()\r\n    local curseParm = {position = playPos + vector(14,3,-6.4), rotation ={0.00, 180.00, 0.00}}\r\n    obj_spawned.takeObject(curseParm)\r\n  end\r\nend\r\n\r\n--fenrix--\r\nif (myName == \"Player Position\") then\r\n    local playPos = getObjectFromGUID(playerBoardGUID[tonumber(myDes)]).getPosition()\r\n    obj_spawned.setPositionSmooth(playPos + vector(0,8,-6.4))\r\n    obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n    if (myDes == \"1\") then\r\n      obj_spawned.setName(\"1st Player Position Token\")\r\n    elseif (myDes == \"2\") then\r\n      obj_spawned.setName(\"2nd Player Position Token\")\r\n    elseif (myDes == \"3\") then\r\n      obj_spawned.setName(\"3rd Player Position Token\")\r\n    elseif (myDes == \"4\") then\r\n      obj_spawned.setName(\"4th Player Position Token\")\r\n    end\r\n    obj_spawned.setDescription(\"\")\r\nend\r\n\r\n--fountain of souls--\r\nif (myName == \"1 Soul Token\") then\r\n  local addY = 6\r\n  if (myDes == \"soul2\") then\r\n    addY = 12\r\n    obj_spawned.setDescription(\"\")\r\n  end\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(-5.65,addY,3.61))\r\n  elseif (PlayerVal == 3) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(-3.43,addY,2.89))\r\n  elseif (PlayerVal == 1 or PlayerVal == 2) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(-1.22,addY,3.19))\r\n  end\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Lantern Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-4.48,7,-3.71))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"One Soul Tokens\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-4,6,7.02))\r\n  obj_spawned.setRotation({0, 0, 0})\r\nend\r\n\r\nif (myName == \"Three Souls Tokens\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(4,6,7.02))\r\n  obj_spawned.setRotation({0, 0, 0})\r\nend\r\n\r\nif (myName == \"Soulfire\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  obj_spawned.setDescription('Soulfire Deck')\r\n  local ac1 = {position = mainPos + vector(-10.69,6,-12.31), rotation = {0,180,0},\r\n  smooth = true}\r\n  local ac2 = {position = mainPos + vector(-4.19,6,-12.31), rotation = {0,180,0},\r\n  smooth = true}\r\n  if (PlayerVal >= 3) then\r\n    obj_spawned.takeObject(ac1)\r\n  end\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.takeObject(ac2)\r\n  end\r\nend\r\n\r\n--fortress\r\nif (myName == \"Fortress Token\") then\r\n  if (PlayerVal == 1 or PlayerVal == 2) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(1.32,7,-3.84))\r\n  elseif (PlayerVal == 3) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(-2.63,7,-3.84))\r\n  elseif (PlayerVal == 4) then\r\n    obj_spawned.setPositionSmooth(subPos + vector(5.61,7,6.37))\r\n  end\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n--corruption's core\r\n\r\n  if (myDes == \"VoidWhite\") then\r\n    obj_spawned.setPositionSmooth(vector(-35.18, 5.61, -16.76))\r\n    obj_spawned.setDescription(\"\")\r\n  end\r\n\r\n    if (myDes == \"VoidOrange\") then\r\n      if (PlayerVal >= 2) then\r\n      obj_spawned.setPositionSmooth(vector(14.79, 5.61, -16.76))\r\n      obj_spawned.setDescription(\"\")\r\n      --print(obj_spawned.getDescription())\r\n      else\r\n        --print(\"kill \" .. obj_spawned.getDescription())\r\n        obj_spawned.destruct()\r\n    end\r\n  end\r\n\r\n    if (myDes == \"VoidBlue\") then\r\n      if (PlayerVal >= 3) then\r\n      obj_spawned.setPositionSmooth(vector(60.00, 5.61, -16.76))\r\n        obj_spawned.setDescription(\"\")\r\n      --print(obj_spawned.getDescription())\r\n  else\r\n    --print(\"kill \" .. obj_spawned.getDescription())\r\n    obj_spawned.destruct()\r\n  end\r\nend\r\n\r\n    if (myDes == \"VoidPurple\") then\r\n      if (PlayerVal >= 4) then\r\n      obj_spawned.setPositionSmooth(vector(-80.21, 5.61, -16.76))\r\n      obj_spawned.setDescription(\"\")\r\n      --print(obj_spawned.getDescription())\r\n      else\r\n        --print(\"kill \" .. obj_spawned.getDescription())\r\n        obj_spawned.destruct()\r\n    end\r\n  end\r\n\r\n\r\nif (myName == \"Rubble Tokens\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-3.2,6,18.13))\r\n  obj_spawned.setRotation({0, 0, 0})\r\n  if (PlayerVal < 4) then\r\n    for i = 1, 3, 1 do\r\n      local offset = -3.6\r\n      if i == 2 then\r\n        offset = 0\r\n      elseif i == 3 then\r\n        offset = 3.6\r\n      end\r\n      local rubbleParams = {position = mainPos + vector(-3.2 + offset,14,9.12), rotation = {0,180,0},\r\n      smooth = true}\r\n      obj_spawned.takeObject(rubbleParams)\r\n    end\r\n  end\r\nend\r\n\r\n-- blight lord --\r\n\r\nif (myName == \"Blight Lord Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.65,8,5.4))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Tainted Jade Deck\") then\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  local jadeParams = {position = mainPos + subDeck + vector(8.35,0,0), rotation = {0,180,180},\r\n  smooth = true}\r\n  local remNum = 4 - (PlayerVal)\r\n\r\n  if (remNum > 0) then\r\n    for i = 1, remNum,1 do\r\n    obj_spawned.takeObject(jadeParams)\r\n    end\r\n  end\r\nend\r\n\r\n--xaxos --\r\nif (myName == \"Xaxos Spells\") then\r\n  local myNum = 5\r\n  if myDes == 4 then\r\n    myNum = 10\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(5.67, 3 + myNum,-2.88))\r\n  obj_spawned.setRotation({0.00, 180.00, 180})\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setName(\"Concentration Deck\")\r\n  obj_spawned.setDescription(\"\")\r\n\r\n  if (myDes == \"3\") then\r\n    xaxosMove(obj_spawned)\r\n  end\r\nend\r\n\r\n-- aracnos --\r\nif (myName == \"Arachnos Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-7.03,9,3.27))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n-- bone --\r\nif (myName == \"Spell Bone Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-6.18,12,0.3))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Gem/Relic Bone Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-6.18,9,0.3))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n-- wayward one --\r\nif (myName == \"Wayward One Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-7.05,9,1.91))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n--wailing or endless decay--\r\nif (myName == \"Shatter\") or (myName == \"Deteriorate\") then\r\n  if (myDes == tostring(PlayerVal)) then\r\n    obj_spawned.setPositionSmooth(mainPos + vector(-17.19,6,-12.31))\r\n    obj_spawned.setRotation({0.00, 180.00, 0.00})\r\n    obj_spawned.setDescription(tostring(PlayerVal) .. \" version\")\r\n  else\r\n    --obj_spawned.setPositionSmooth(mainPos + subDeck + vector(8.35,0,0))\r\n    obj_spawned.setPositionSmooth(vector(22.61, 2.42, 4.58) + vector(0,tonumber(obj_spawned.getDescription()),0))\r\n    obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  end\r\nend\r\n\r\nif (myName == \"Target Token\") then\r\n  local playerBoard = getObjectFromGUID(playerBoardGUID[1])\r\n  local playerPos = playerBoard.getPosition()\r\n  obj_spawned.setPositionSmooth(playerPos + vector(0,12,-1.91))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\nif (myName == \"Shatter Power\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-17.19,8,-10.11))\r\n  obj_spawned.setRotation({0.00, 180, 0.00})\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setDescription(\"11\")\r\n    obj_spawned.call('startVal',13)\r\n  elseif (PlayerVal == 2) then\r\n    obj_spawned.setDescription(\"6\")\r\n    obj_spawned.call('startVal',8)\r\n  elseif (PlayerVal == 3) then\r\n    obj_spawned.setDescription(\"8\")\r\n    obj_spawned.call('startVal',10)\r\n  elseif (PlayerVal == 1) then\r\n    obj_spawned.setDescription(\"5\")\r\n    obj_spawned.call('startVal',6)\r\n  end\r\nend\r\n\r\nif (myName == \"Deteriorate Power\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-17.19,8,-10.11))\r\n  obj_spawned.setRotation({0.00, 180, 0.00})\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setDescription(\"7\")\r\n    obj_spawned.call('startVal',10)\r\n  elseif (PlayerVal == 3) then\r\n    obj_spawned.setDescription(\"6\")\r\n    obj_spawned.call('startVal',8)\r\n  elseif (PlayerVal == 2) then\r\n    obj_spawned.setDescription(\"4\")\r\n    obj_spawned.call('startVal',6)\r\n  elseif (PlayerVal == 1) then\r\n    obj_spawned.setDescription(\"3\")\r\n    obj_spawned.call('startVal',4)\r\n  end\r\nend\r\n\r\n--deathmind--\r\nif (myName == \"Sever Link Power\") then\r\n  obj_spawned.setPositionSmooth({-17.19, 1.76, -0.49})\r\n  obj_spawned.setRotation({0.00, 180, 0.00})\r\nend\r\n-- wanderer / changeling nest\r\nif (myDes == \"P1\") or (myName == \"(Yellow)\") then\r\n  local cX = 0\r\n  if (myName == \"(Yellow)\") then\r\n    cX = 180\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.41,6,5.41))\r\n  obj_spawned.setRotation({0, 180, cX})\r\n  obj_spawned.setDescription('')\r\nend\r\nif (myDes == \"P2\") or (myName == \"(Green)\") then\r\n  local cX = 0\r\n  if (myName == \"(Green)\") then\r\n    cX = 180\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(3.41,6,5.41))\r\n  obj_spawned.setRotation({0, 180, cX})\r\n  obj_spawned.setDescription('')\r\nend\r\nif (myDes == \"P3\") or (myName == \"(Blue)\") then\r\n  local cX = 0\r\n  if (myName == \"(Blue)\") then\r\n    cX = 180\r\n  end\r\n  local addV = vector(0,0,0)\r\n  if (myName == \"(Blue)\") then\r\n    addV = vector(3.41,0,0)\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.41,6,-5.41) + addV)\r\n  obj_spawned.setRotation({0, 180, cX})\r\n  obj_spawned.setDescription('')\r\nend\r\nif (myDes == \"P4\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(3.41,6,-5.41))\r\n  obj_spawned.setRotation({0, 180, 0})\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\nif (myName == \"Pylon Health 1\") or (myGMS == \"Cocoon1\") then\r\n  local vxc = vector(0,0,0)\r\n  if (myGMS == \"Cocoon1\") then\r\n    vxc = vector(-1.76,0,0)\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.41,6,5.41) + vector(-0.06,5,2.08) + vxc)\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\nif (myName == \"Pylon Health 2\") or (myGMS == \"Cocoon2\") then\r\n  local vxc = vector(0,0,0)\r\n  if (myGMS == \"Cocoon2\") then\r\n    vxc = vector(-1.76,0,0)\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(3.41,6,5.41) + vector(-0.06,5,2.08) + vxc)\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\nif (myName == \"Pylon Health 3\") or (myGMS == \"Cocoon3\") then\r\n  local addV = vector(0,0,0)\r\n  if (myGMS == \"Cocoon3\") then\r\n    addV = vector(1.705,0,0)\r\n  end\r\n  obj_spawned.setPositionSmooth(subPos + vector(-3.41,6,-5.41) + vector(-0.06,5,2.08) + addV)\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\nif (myName == \"Pylon Health 4\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(3.41,6,-5.41) + vector(-0.06,5,2.08))\r\n  obj_spawned.setRotation({0, 180, 0})\r\nend\r\n\r\n--knight of shackles --\r\nif (myName == \"Knight of Shackles Breach I\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-5.79,6,3.74))\r\n  obj_spawned.setRotation({0, 180, 180})\r\nend\r\n\r\nif (myName == \"Knight of Shackles Breach II\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(2.89,6,3.74))\r\n  obj_spawned.setRotation({0, 180, 180})\r\nend\r\n\r\nif (myName == \"Knight of Shackles Breach III\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-1.96,6,-3.33))\r\n  obj_spawned.setRotation({0, 180, 180})\r\nend\r\n\r\nif (myName == \"Knight of Shackles Breach IV\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(6.24,6,-3.33))\r\n  obj_spawned.setRotation({0, 180, 180})\r\nend\r\n\r\nif (myName == \"Z'hana Commander Cards\" or myName == \"Brama Commander Cards\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0,9,0))\r\n  obj_spawned.setDescription(\"wip - spread these to each space\")\r\nend\r\n\r\n--maggoth --\r\nif (myName == \"Maggot/Fly Tokens\") or (myDes == \"SubBag2\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-1.2,6,7))\r\n  obj_spawned.setRotation({0, 0, 0})\r\nend\r\nif (myDes == \"Maggoth1\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-5.21,8,-7.42))\r\n  obj_spawned.setRotation({0, 180, 0})\r\n  obj_spawned.setDescription('')\r\nend\r\nif (myDes == \"Maggoth2\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-2.66,8,-7.42))\r\n  obj_spawned.setRotation({0, 180, 0})\r\n  obj_spawned.setDescription('')\r\nend\r\n\r\n--carapace queen--\r\nif (myDes == \"Husk1\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-2.27,8,4.05))\r\n  obj_spawned.setRotation({0, 180, 0})\r\n  obj_spawned.setDescription('1 Life')\r\nend\r\nif (myDes == \"Husk2\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0.44,8,4.05))\r\n  obj_spawned.setRotation({0, 180, 0})\r\n  obj_spawned.setDescription('1 Life')\r\nend\r\n\r\n-- spawning horror --\r\n\r\nif (myName == \"Breeding Chamber Health\") then\r\n  obj_spawned.setPositionSmooth(mainPos + vector(-17.19,8,-10.31))\r\n  obj_spawned.setRotation({0.00, 180, 0.00})\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setDescription(\"1\")\r\n    obj_spawned.call('setVal')\r\n  end\r\nend\r\n\r\n--experiment 153 specialised\r\nif (myName == \"Maw Token 1\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-0.86,6,-4.71))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Maw Token 2\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(0.99,6,-5.7))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Maw Token 3\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(2.9,6,-5.7))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Maw Token 4\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(4.78,6,-4.71))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n\r\nif (myName == \"Maw Health 1\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-10.54,4,-3.94))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Maw Health 2\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-7.92,4,-3.94))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n\r\nif (myName == \"Maw Health 3\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(7.92,4,-3.94))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Maw Health 4\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(10.54,4,-3.94))\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n\r\n--that city boss i cant spell\r\nif (myName == \"Mega Breach\") then\r\n\r\n    obj_spawned.setPositionSmooth(subPos + vector(-16,7,0))\r\n    obj_spawned.setRotation({0.00, 240.0, 0.00})\r\n  end\r\nif (myName == \"Mega Breach Controls\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-20,4,0))\r\n  obj_spawned.setRotation({0,180.00,0})\r\n  obj_spawned.setVar(\"count\", 7)\r\nend\r\n\r\n\r\nif (myName == \"City Token\") then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-5.4,5,4.36))\r\n  obj_spawned.setRotation({0.00,180.00,0})\r\nend\r\n\r\nif (myName == \"[EEAFFF]Damage Track Token[-]\") then\r\n  if (PlayerVal < 3) then\r\n  obj_spawned.setPositionSmooth(subPos + vector(-6.47,5,-2.42))\r\n  else\r\n    obj_spawned.setPositionSmooth(subPos + vector(-5.51,5,-5.1))\r\n  end\r\n  obj_spawned.setRotation({0.00,180.00,0})\r\nend\r\n\r\n-- burrowerer\r\n\r\nif (myName == \"Burrower Traps\") then\r\n  obj_spawned.shuffle()\r\n  obj_spawned.setPositionSmooth(mainPos + subDeck)\r\n  obj_spawned.setRotation({0.00, 180.00, 180.00})\r\n  for i = 1, 9, 1 do\r\n    local myDeck = findDecksInZone(getObjectFromGUID(shop_table[i]))\r\n    print(\"Found Deck: \" .. tostring(myDeck.getGUID()) .. \" - Contains  \" .. tostring(myDeck.getQuantity()))\r\n    IncreaseBurrower = 2\r\n    CurrentSetting = i\r\n    local quant = myDeck.getQuantity() + 4\r\n      if (quant == 9) then\r\n        quant = 8\r\n      end\r\n    for j = 0, quant , 1 do\r\n      if (j % 3 == 0) then\r\n        trapParam = {position = shop_vector[i] + vector(0,IncreaseBurrower,0), rotation = {0,180,0}}\r\n        obj_spawned.takeObject(trapParam)\r\n        IncreaseBurrower = IncreaseBurrower + 3\r\n      elseif (j % 3 == 1 or j % 3 == 2) then\r\n        trapParam = {position = shop_vector[i] + vector(0,IncreaseBurrower,-0), rotation = {0,180,0}}\r\n        myDeck.takeObject(trapParam)\r\n        IncreaseBurrower = IncreaseBurrower + 3\r\n      end\r\n    end\r\n  end\r\nend\r\n\r\n--Absorbing Wraith--\r\nif (myName == \"Freeze Token\") then\r\n  obj_spawned.setPositionSmooth({-7.88, 3, 36.42})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"[FFD700]Aether Tokens[-] [i]\") then\r\n  obj_spawned.setPositionSmooth({-25.70, 2, 20.91})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n--The Reliquary\r\nif (myName == \"Obsession Deck\") then\r\n  obj_spawned.setPositionSmooth({-34.82, 1.78, 8.87})\r\n  obj_spawned.setRotation({0.00, 180.00, 180})\r\n  obj_spawned.shuffle()\r\n  local pos1 = {-17.19, 1.72, 6.06}\r\n  local pos2 = {-10.69, 1.71, 6.06}\r\n  local rot = {0,180,0}\r\n  obj_spawned.takeObject({position = pos1, rotation = rot, smooth = false})\r\n  obj_spawned.takeObject({position = pos2, rotation = rot, smooth = false})\r\n  Wait.time(function()\r\n    local increment = PlayerVal * 2\r\n    for _, guid in ipairs({\"5026e7\", \"04f1f6\"}) do\r\n      local zone = getObjectFromGUID(guid)\r\n      local counter_table = zone.getObjects()\r\n      for i, object in ipairs(counter_table)do\r\n          if object.getName() == \"Power Counter\" then\r\n            for i = 1, increment do\r\n                object.call(\"IncVal\")  -- 调用计数器的增加函数\r\n            end\r\n          end\r\n      end\r\n    end\r\n  end, 0.5)\r\nend\r\nif (myDes == \"Tainted Halo Deck\") then\r\n  obj_spawned.setPositionSmooth({15.31, 1.73, 6.06})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n--The Wrath--\r\nif (myDes == \"the Wrath Track(normal difficulty)\") then\r\n  obj_spawned.setPositionSmooth({-34.82, 2, 8.86})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myDes == \"the Wrath Track(increased difficulty)\") then\r\n  obj_spawned.setPositionSmooth({-65.04, 1.67, 8.65})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Strike Token\") then\r\n  obj_spawned.setPositionSmooth({-44.96, 3, 11.77})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\n--The Coven--\r\nif (myName == \"Matron of Malice\") then\r\n  obj_spawned.setPositionSmooth({-45.19, 3.68, 5.41})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"Daughter of Doom\") then\r\n  obj_spawned.setPositionSmooth({-32.19, 3.66, 5.41})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\nend\r\nif (myName == \"the Coven Board\") then\r\n  obj_spawned.setPositionSmooth({-35.48, 1.73, 5.42})\r\n  obj_spawned.setRotation({0.00, 180.00, 0})\r\n  obj_spawned.setLock(true)\r\nend\r\nif (myName == \"Barrier Tokens\") then\r\n  obj_spawned.setPositionSmooth({-35.49, 1.72, 14.13})\r\n  obj_spawned.setRotation({0.08, 90.00, 359.98})\r\n  obj_spawned.setLock(true)\r\nend\r\nif (myName == \"Barrier Counters\") then\r\n  obj_spawned.setPositionSmooth({-31.49, 1.72, 14.13})\r\n  obj_spawned.setRotation({0.08, 90.00, 359.98})\r\n  obj_spawned.setLock(true)\r\nend\r\n--Absorbing Wraith--\r\nif myName == \"Aether Counter 1\" then\r\n  obj_spawned.setPositionSmooth({-40.94, 4,18.57})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\nif myName == \"Aether Counter 2\" then\r\n  obj_spawned.setPositionSmooth({-34.90, 4, 18.57})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\nif myName == \"Aether Counter 3\" then\r\n  obj_spawned.setPositionSmooth({-28.86, 4, 18.57})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\nif myName == \"Aether Counter 4\" then\r\n  obj_spawned.setPositionSmooth({-40.94, 4, 7.52})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\nif myName == \"Aether Counter 5\" then\r\n  obj_spawned.setPositionSmooth({-34.90, 4, 7.52})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\nif myName == \"Aether Counter 6\" then\r\n  obj_spawned.setPositionSmooth({-28.86, 4, 7.52})\r\n  Wait.time(function()\r\n      obj_spawned.setLock(true)\r\n  end, 2)\r\nend\r\n\r\nif (myName == \"1-player MM\") then\r\n  if (PlayerVal == 1) then\r\n    obj_spawned.setPositionSmooth({-38.69, 3.69, 5.40})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n  end\r\nend\r\nif (myName == \"1-player DD\") then\r\n  if (PlayerVal == 1) then\r\n    obj_spawned.setPositionSmooth({-25.69, 3.67, 5.41})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n  end\r\nend\r\n\r\nif (myName == \"2-player MM\") then\r\n  if (PlayerVal == 2) then\r\n    obj_spawned.setPositionSmooth({-38.69, 3.69, 5.40})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth({22.61,3, 4.58}) --destroyed\r\n end\r\n end\r\nif (myName == \"2-player DD\") then\r\n  if (PlayerVal == 2) then\r\n    obj_spawned.setPositionSmooth({-25.69, 3.67, 5.41})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n  end\r\nend\r\n\r\nif (myName == \"3-player MM\") then\r\n  if (PlayerVal == 3) then\r\n    obj_spawned.setPositionSmooth({-38.69, 3.69, 5.40})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n end\r\n end\r\nif (myName == \"3-player DD\") then\r\n  if (PlayerVal == 3) then\r\n    obj_spawned.setPositionSmooth({-25.69, 3.67, 5.41})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n  end\r\nend\r\n\r\nif (myName == \"4-player MM\") then\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setPositionSmooth({-38.69, 3.69, 5.40})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n end\r\n end\r\nif (myName == \"4-player DD\") then\r\n  if (PlayerVal == 4) then\r\n    obj_spawned.setPositionSmooth({-25.69, 3.67, 5.41})\r\n    obj_spawned.setRotation({0.00, 180.00, 0})\r\n  else\r\n    obj_spawned.setPositionSmooth( {22.61,3, 4.58}) --destroyed\r\n  end\r\nend\r\nif (myName == \"MM Life\") then\r\n  obj_spawned.setPositionSmooth({-45.24, 5, 8.13})\r\n  obj_spawned.setRotation({0.08, 180.00, 0})\r\nend\r\nif (myName == \"DD Life\") then\r\n  obj_spawned.setPositionSmooth({-32.24, 5, 8.22})\r\n  obj_spawned.setRotation({0.08, 180.00, 0})\r\nend\r\nif (myName == \"Barrier Counter 1\") then\r\n  obj_spawned.setPositionSmooth({-38.85, 3, 10.41})\r\n  obj_spawned.setRotation({359.31, 179.99, 0.00})\r\nend\r\nif (myName == \"Barrier Counter 2\") then\r\n  obj_spawned.setPositionSmooth({-25.65, 3, 10.23})\r\n  obj_spawned.setRotation({359.30, 179.97, 0.00})\r\nend\r\nif (myName == \"Power Counter 1\") then\r\n  obj_spawned.setPositionSmooth({-38.76, 3, -0.35})\r\n  obj_spawned.setRotation({0.71, 180.03, 0.00})\r\nend\r\nif (myName == \"Power Counter 2\") then\r\n  obj_spawned.setPositionSmooth({-25.64, 3, -0.32})\r\n  obj_spawned.setRotation({0.71, 180.03, 0.00})\r\nend\r\n\r\nfunction Burrower(offset,sV)\r\n    return {position = shop_vector[sV] + vector(0,offset,0), rotation = {0,180,0}}\r\nend\r\n\r\nend\r\n",
  "LuaScriptState": "{\"BattleVal\":1,\"PlayerVal\":2}",
  "XmlUI": "",
  "AttachedSnapPoints": [
    {
      "Position": {
        "x": -2.24205232,
        "y": 0.09882657,
        "z": 0.0423408672
      }
    }
  ],
  "AttachedDecals": [
    {
      "Transform": {
        "posX": 0.9438982,
        "posY": 0.110000178,
        "posZ": -0.799061239,
        "rotX": 90,
        "rotY": 179.998581,
        "rotZ": 0,
        "scaleX": 0.909687936,
        "scaleY": 0.244775519,
        "scaleZ": 1.6934216
      },
      "CustomDecal": {
        "Name": "basic",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819530661/FCB469E8AFCE6615D7AE6E00B487A0CA06CCC9EA/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": 1.77440882,
        "posY": 0.110000223,
        "posZ": -0.209433049,
        "rotX": 90,
        "rotY": 179.998581,
        "rotZ": 0,
        "scaleX": 0.0900953,
        "scaleY": 0.8450317,
        "scaleZ": 5.846152
      },
      "CustomDecal": {
        "Name": "pergame",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819529323/F7D19A4FA81E70A870875BCFF5A00763B44E0020/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": 1.77974939,
        "posY": 0.110000126,
        "posZ": 0.767024159,
        "rotX": 90,
        "rotY": 179.998581,
        "rotZ": 0,
        "scaleX": 0.103264652,
        "scaleY": 0.244775519,
        "scaleZ": 1.6934216
      },
      "CustomDecal": {
        "Name": "all1",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819531587/1991DB01655E86071D4A4D3D0B1EA7878EA5EC49/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": 2.38327479,
        "posY": 0.110000178,
        "posZ": -0.556528747,
        "rotX": 90,
        "rotY": 179.998581,
        "rotZ": 0,
        "scaleX": 1.15662932,
        "scaleY": 0.114189558,
        "scaleZ": 0.789993465
      },
      "CustomDecal": {
        "Name": "exp",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819530778/B3F77B4A4008502D10863078F8DB82135F9ABCDA/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": 2.399907,
        "posY": 0.1100002,
        "posZ": 0.4456325,
        "rotX": 90,
        "rotY": 179.998581,
        "rotZ": 0,
        "scaleX": 1.28958058,
        "scaleY": 0.125608519,
        "scaleZ": 0.8689929
      },
      "CustomDecal": {
        "Name": "perplayer",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819529387/35EA67CF44F733174B6F54222432428374310A8C/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": -2.28070831,
        "posY": 0.110000208,
        "posZ": -0.7039554,
        "rotX": 90,
        "rotY": 180.001617,
        "rotZ": 0,
        "scaleX": 1.64649677,
        "scaleY": 0.325796247,
        "scaleZ": 2.2539444
      },
      "CustomDecal": {
        "Name": "setup1",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819531455/99023ECFC441760EDC8F659B16A67498C1339E44/",
        "Size": 3
      }
    },
    {
      "Transform": {
        "posX": -0.560090542,
        "posY": 0.110000283,
        "posZ": -0.7605393,
        "rotX": 90,
        "rotY": 180.001617,
        "rotZ": 0,
        "scaleX": 1.27687585,
        "scaleY": 0.138169378,
        "scaleZ": 0.955892265
      },
      "CustomDecal": {
        "Name": "upg",
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819531692/C375ED6FE549BEA7DB5E771CFDBC868502A94693/",
        "Size": 3
      }
    }
  ]
}