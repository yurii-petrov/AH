{
  "GUID": "422303",
  "Name": "Custom_Token",
  "Transform": {
    "posX": 0.000333182717,
    "posY": 1.57511508,
    "posZ": -21.7137165,
    "rotX": 0.0168557968,
    "rotY": 180.015091,
    "rotZ": 0.07988065,
    "scaleX": 3.12,
    "scaleY": 1,
    "scaleZ": 3.12
  },
  "Nickname": "Xaxos Life",
  "Description": "Change to state 1 for Gravehold flavoured life tracker.",
  "GMNotes": "",
  "AltLookAngle": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  "ColorDiffuse": {
    "r": 1,
    "g": 1,
    "b": 1
  },
  "LayoutGroupSortIndex": 0,
  "Value": 0,
  "Locked": true,
  "Grid": true,
  "Snap": true,
  "IgnoreFoW": false,
  "MeasureMovement": false,
  "DragSelectable": true,
  "Autoraise": true,
  "Sticky": true,
  "Tooltip": true,
  "GridProjection": false,
  "HideWhenFaceDown": false,
  "Hands": false,
  "CustomImage": {
    "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819374145/81FF28AFB9935C621F49971DD62214460FB29FDF/",
    "ImageSecondaryURL": "",
    "ImageScalar": 1,
    "WidthScale": 0,
    "CustomToken": {
      "Thickness": 0.2,
      "MergeDistancePixels": 15,
      "StandUp": false,
      "Stackable": false
    }
  },
  "LuaScript": "-- Universal Counter Tokens      coded by: MrStump\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {saved_count = count}\r\n    saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\n--Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    generateButtonParamiters()\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'count'\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        count = loaded_data.saved_count\r\n    else\r\n        --If there wasn't saved data, the default value is set to 10.\r\n        count = 10\r\n    end\r\n\r\n    --Generates the buttons after putting the count value onto the 'display' button\r\n    b_display.label = tostring(count)\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    self.createButton(b_display)\r\n    self.createButton(b_plus)\r\n    self.createButton(b_minus)\r\n    self.createButton(b_plus5)\r\n    self.createButton(b_minus5)\r\nend\r\n\r\n--Activates when + is hit. Adds 1 to 'count' then updates the display button.\r\nfunction increase()\r\n    count = count + 1\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.\r\nfunction decrease()\r\n    --Prevents count from going below 0\r\n    if count > 0 then\r\n        count = count - 1\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--Activates when + is hit. Adds 5 to 'count' then updates the display button.\r\nfunction increase5()\r\n    count = count + 5\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 5 from 'count' then updates the display button.\r\nfunction decrease5()\r\n    --Prevents count from going below 0\r\n    if count > 4 then\r\n        count = count - 5\r\n    else\r\n        count = 0\r\n    end\r\n    updateDisplay()\r\nend\r\n\r\nfunction customSet()\r\n    local description = self.getDescription()\r\n    if description != '' and type(tonumber(description)) == 'number' then\r\n        self.setDescription('')\r\n        count = tonumber(description)\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--function that updates the display. I trigger it whenever I change 'count'\r\nfunction updateDisplay()\r\n    --If statement to resize font size if it gets too long\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    b_display.label = tostring(count)\r\n    self.editButton(b_display)\r\nend\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\nfunction generateButtonParamiters()\r\n    b_display = {\r\n        index = 0, click_function = 'customSet', function_owner = self, label = '',\r\n        position = {0,0.1,0}, width = 600, height = 600, font_size = 500, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_plus = {\r\n        click_function = 'increase', function_owner = self, label =  '+1',\r\n        position = {0.75,0.1,0.26}, width = 150, height = 300, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_minus = {\r\n        click_function = 'decrease', function_owner = self, label =  '-1',\r\n        position = {-0.75,0.1,0.26}, width = 150, height = 300, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_plus5 = {\r\n        click_function = 'increase5', function_owner = self, label =  '+5',\r\n        position = {0.75,0.1,-0.29}, width = 150, height = 230, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_minus5 = {\r\n        click_function = 'decrease5', function_owner = self, label =  '-5',\r\n        position = {-0.75,0.1,-0.29}, width = 150, height = 230, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\nend",
  "LuaScriptState": "{\"saved_count\":30}",
  "XmlUI": "",
  "States": {
    "1": {
      "GUID": "bc7687",
      "Name": "Custom_Token",
      "Transform": {
        "posX": 0.000333182717,
        "posY": 1.57511508,
        "posZ": -21.7137165,
        "rotX": 0.01685415,
        "rotY": 180.015091,
        "rotZ": 0.07988065,
        "scaleX": 3.12,
        "scaleY": 1,
        "scaleZ": 3.12
      },
      "Nickname": "Gravehold Life",
      "Description": "Change to state 2 for a Xaxos flavoured life counter.",
      "GMNotes": "",
      "AltLookAngle": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "ColorDiffuse": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "LayoutGroupSortIndex": 0,
      "Value": 0,
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "MeasureMovement": false,
      "DragSelectable": true,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomImage": {
        "ImageURL": "https://steamusercontent-a.akamaihd.net/ugc/2064382397819374418/A98426446A8D5A9A296E1A795D0118C342D4A74D/",
        "ImageSecondaryURL": "",
        "ImageScalar": 1,
        "WidthScale": 0,
        "CustomToken": {
          "Thickness": 0.2,
          "MergeDistancePixels": 6.66666651,
          "StandUp": false,
          "Stackable": false
        }
      },
      "LuaScript": "-- Universal Counter Tokens      coded by: MrStump\r\n\r\n--Saves the count value into a table (data_to_save) then encodes it into the Tabletop save\r\nfunction onSave()\r\n    local data_to_save = {saved_count = count}\r\n    saved_data = JSON.encode(data_to_save)\r\n    return saved_data\r\nend\r\n\r\n--Loads the saved data then creates the buttons\r\nfunction onload(saved_data)\r\n    generateButtonParamiters()\r\n    --Checks if there is a saved data. If there is, it gets the saved value for 'count'\r\n    if saved_data != '' then\r\n        local loaded_data = JSON.decode(saved_data)\r\n        count = loaded_data.saved_count\r\n    else\r\n        --If there wasn't saved data, the default value is set to 10.\r\n        count = 10\r\n    end\r\n\r\n    --Generates the buttons after putting the count value onto the 'display' button\r\n    b_display.label = tostring(count)\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    self.createButton(b_display)\r\n    self.createButton(b_plus)\r\n    self.createButton(b_minus)\r\n    self.createButton(b_plus5)\r\n    self.createButton(b_minus5)\r\nend\r\n\r\n--Activates when + is hit. Adds 1 to 'count' then updates the display button.\r\nfunction increase()\r\n    count = count + 1\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 1 from 'count' then updates the display button.\r\nfunction decrease()\r\n    --Prevents count from going below 0\r\n    if count > 0 then\r\n        count = count - 1\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--Activates when + is hit. Adds 5 to 'count' then updates the display button.\r\nfunction increase5()\r\n    count = count + 5\r\n    updateDisplay()\r\nend\r\n\r\n--Activates when - is hit. Subtracts 5 from 'count' then updates the display button.\r\nfunction decrease5()\r\n    --Prevents count from going below 0\r\n    if count > 4 then\r\n        count = count - 5\r\n    else\r\n        count = 0\r\n    end\r\n    updateDisplay()\r\nend\r\n\r\nfunction customSet()\r\n    local description = self.getDescription()\r\n    if description != '' and type(tonumber(description)) == 'number' then\r\n        self.setDescription('')\r\n        count = tonumber(description)\r\n        updateDisplay()\r\n    end\r\nend\r\n\r\n--function that updates the display. I trigger it whenever I change 'count'\r\nfunction updateDisplay()\r\n    --If statement to resize font size if it gets too long\r\n    if count >= 100 then\r\n        b_display.font_size = 360\r\n    else\r\n        b_display.font_size = 500\r\n    end\r\n    b_display.label = tostring(count)\r\n    self.editButton(b_display)\r\nend\r\n\r\n--This is activated when onload runs. This sets all paramiters for our buttons.\r\n--I do not have to put this all into a function, but I prefer to do it this way.\r\nfunction generateButtonParamiters()\r\n    b_display = {\r\n        index = 0, click_function = 'customSet', function_owner = self, label = '',\r\n        position = {0,0.1,0}, width = 600, height = 600, font_size = 500, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_plus = {\r\n        click_function = 'increase', function_owner = self, label =  '+1',\r\n        position = {0.75,0.1,0.26}, width = 150, height = 300, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_minus = {\r\n        click_function = 'decrease', function_owner = self, label =  '-1',\r\n        position = {-0.75,0.1,0.26}, width = 150, height = 300, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_plus5 = {\r\n        click_function = 'increase5', function_owner = self, label =  '+5',\r\n        position = {0.75,0.1,-0.29}, width = 150, height = 230, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\n    b_minus5 = {\r\n        click_function = 'decrease5', function_owner = self, label =  '-5',\r\n        position = {-0.75,0.1,-0.29}, width = 150, height = 230, font_size = 100, color = {0,0,0}, font_color = {0,1,0}\r\n    }\r\nend",
      "LuaScriptState": "{\"saved_count\":30}",
      "XmlUI": ""
    }
  }
}